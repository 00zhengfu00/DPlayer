{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///DPlayer.min.js","webpack:///webpack/bootstrap 07ee34b5829460d0cae7","webpack:///./src/DPlayer.js"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DPlayer","option","_this","svg","play","pause","volume-up","volume-down","volume-off","loop","full","setting","right","comment","comment-off","send","getSVG","type","isMobile","navigator","userAgent","match","autoplay","defaultOption","element","document","getElementsByClassName","theme","defaultKey","hasOwnProperty","secondToTime","second","add0","num","min","parseInt","sec","updateBar","percentage","direction","style","eventTypes","event","trigger","_i","value","_this2","danmaku","classList","add","innerHTML","video","pic","url","audio","bezel","addEventListener","remove","ptime","playButton","shouldpause","toggle","paused","getElementViewLeft","actualLeft","offsetLeft","current","offsetParent","elementScrollLeft","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","body","scrollLeft","documentElement","playedBar","loadedBar","bar","barWidth","dan","time","currentTime","danIndex","lastPlayPos","currentPlayPos","bufferingDetected","setTime","playedTime","setInterval","duration","danmakuTime","item","parseFloat","danmakuIn","text","color","clearTime","clearInterval","e","window","clientWidth","clientX","width","thumbMove","thumbUp","removeEventListener","volumeBar","volumeEle","volumeBarWrapWrap","volumeBarWrap","volumeicon","vWidth","switchVolumeIcon","volume","volumeMove","muted","volumeUp","hideTime","hideController","clearTimeout","setTimeout","played","closeSetting","closeComment","danOpacity","settingHTML","original","speed","settingIcon","settingBox","mask","contains","settingEvent","openSetting","loopEle","loopToggle","checked","speedEle","speedItem","_loop","playbackRate","dataset","danmakuBar","danmakuBarWrapWrap","danmakuBarWrap","danmakuSettingBox","dWidth","danmakuMove","items","opacity","danmakuUp","buffered","end","ended","danContainer","itemHeight","danWidth","danHeight","itemY","danTunnel","top","bottom","danItemRight","ele","getBoundingClientRect","danSpeed","offsetWidth","getTunnel","tmp","_loop2","splice","v","j","danRight","push","_ret3","offsetHeight","createElement","appendChild","transform","removeChild","console","error","xhr","XMLHttpRequest","onreadystatechange","readyState","status","response","JSON","parse","responseText","code","alert","msg","sort","b","display","log","apiurl","maximum","api","open","commentInput","commentIcon","commentBox","commentSettingIcon","commentSettingBox","commentSendIcon","htmlEncode","str","replace","sendComment","blur","danmakuData","token","player","author","querySelector","stringify","closeCommentSetting","toggleCommentSetting","disableHide","handleKeyDown","openComment","focus","sele","fill","keyCode","resetAnimation","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","preventDefault","menu","left","clientY","name","func"],"mappings":"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","file":"DPlayer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DPlayer = function () {\n\t    /**\n\t     * DPlayer constructor function\n\t     *\n\t     * @param {Object} option - See README\n\t     * @constructor\n\t     */\n\t\n\t    function DPlayer(option) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, DPlayer);\n\t\n\t        this.svg = {\n\t            'play': ['0 0 16 32', 'M15.552 15.168q0.448 0.32 0.448 0.832 0 0.448-0.448 0.768l-13.696 8.512q-0.768 0.512-1.312 0.192t-0.544-1.28v-16.448q0-0.96 0.544-1.28t1.312 0.192z'],\n\t            'pause': ['0 0 17 32', 'M14.080 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048zM2.88 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048z'],\n\t            'volume-up': ['0 0 21 32', 'M13.728 6.272v19.456q0 0.448-0.352 0.8t-0.8 0.32-0.8-0.32l-5.952-5.952h-4.672q-0.48 0-0.8-0.352t-0.352-0.8v-6.848q0-0.48 0.352-0.8t0.8-0.352h4.672l5.952-5.952q0.32-0.32 0.8-0.32t0.8 0.32 0.352 0.8zM20.576 16q0 1.344-0.768 2.528t-2.016 1.664q-0.16 0.096-0.448 0.096-0.448 0-0.8-0.32t-0.32-0.832q0-0.384 0.192-0.64t0.544-0.448 0.608-0.384 0.512-0.64 0.192-1.024-0.192-1.024-0.512-0.64-0.608-0.384-0.544-0.448-0.192-0.64q0-0.48 0.32-0.832t0.8-0.32q0.288 0 0.448 0.096 1.248 0.48 2.016 1.664t0.768 2.528zM25.152 16q0 2.72-1.536 5.056t-4 3.36q-0.256 0.096-0.448 0.096-0.48 0-0.832-0.352t-0.32-0.8q0-0.704 0.672-1.056 1.024-0.512 1.376-0.8 1.312-0.96 2.048-2.4t0.736-3.104-0.736-3.104-2.048-2.4q-0.352-0.288-1.376-0.8-0.672-0.352-0.672-1.056 0-0.448 0.32-0.8t0.8-0.352q0.224 0 0.48 0.096 2.496 1.056 4 3.36t1.536 5.056zM29.728 16q0 4.096-2.272 7.552t-6.048 5.056q-0.224 0.096-0.448 0.096-0.48 0-0.832-0.352t-0.32-0.8q0-0.64 0.704-1.056 0.128-0.064 0.384-0.192t0.416-0.192q0.8-0.448 1.44-0.896 2.208-1.632 3.456-4.064t1.216-5.152-1.216-5.152-3.456-4.064q-0.64-0.448-1.44-0.896-0.128-0.096-0.416-0.192t-0.384-0.192q-0.704-0.416-0.704-1.056 0-0.448 0.32-0.8t0.832-0.352q0.224 0 0.448 0.096 3.776 1.632 6.048 5.056t2.272 7.552z'],\n\t            'volume-down': ['0 0 21 32', 'M13.728 6.272v19.456q0 0.448-0.352 0.8t-0.8 0.32-0.8-0.32l-5.952-5.952h-4.672q-0.48 0-0.8-0.352t-0.352-0.8v-6.848q0-0.48 0.352-0.8t0.8-0.352h4.672l5.952-5.952q0.32-0.32 0.8-0.32t0.8 0.32 0.352 0.8zM20.576 16q0 1.344-0.768 2.528t-2.016 1.664q-0.16 0.096-0.448 0.096-0.448 0-0.8-0.32t-0.32-0.832q0-0.384 0.192-0.64t0.544-0.448 0.608-0.384 0.512-0.64 0.192-1.024-0.192-1.024-0.512-0.64-0.608-0.384-0.544-0.448-0.192-0.64q0-0.48 0.32-0.832t0.8-0.32q0.288 0 0.448 0.096 1.248 0.48 2.016 1.664t0.768 2.528z'],\n\t            'volume-off': ['0 0 21 32', 'M13.728 6.272v19.456q0 0.448-0.352 0.8t-0.8 0.32-0.8-0.32l-5.952-5.952h-4.672q-0.48 0-0.8-0.352t-0.352-0.8v-6.848q0-0.48 0.352-0.8t0.8-0.352h4.672l5.952-5.952q0.32-0.32 0.8-0.32t0.8 0.32 0.352 0.8z'],\n\t            'loop': ['0 0 32 32', 'M1.882 16.941c0 4.152 3.221 7.529 7.177 7.529v1.882c-4.996 0-9.060-4.222-9.060-9.412s4.064-9.412 9.060-9.412h7.96l-3.098-3.098 1.331-1.331 5.372 5.37-5.37 5.372-1.333-1.333 3.1-3.098h-7.962c-3.957 0-7.177 3.377-7.177 7.529zM22.94 7.529v1.882c3.957 0 7.177 3.377 7.177 7.529s-3.221 7.529-7.177 7.529h-7.962l3.098-3.098-1.331-1.331-5.37 5.37 5.372 5.372 1.331-1.331-3.1-3.1h7.96c4.998 0 9.062-4.222 9.062-9.412s-4.064-9.412-9.060-9.412z'],\n\t            'full': ['0 0 32 33', 'M6.667 28h-5.333c-0.8 0-1.333-0.533-1.333-1.333v-5.333c0-0.8 0.533-1.333 1.333-1.333s1.333 0.533 1.333 1.333v4h4c0.8 0 1.333 0.533 1.333 1.333s-0.533 1.333-1.333 1.333zM30.667 28h-5.333c-0.8 0-1.333-0.533-1.333-1.333s0.533-1.333 1.333-1.333h4v-4c0-0.8 0.533-1.333 1.333-1.333s1.333 0.533 1.333 1.333v5.333c0 0.8-0.533 1.333-1.333 1.333zM30.667 12c-0.8 0-1.333-0.533-1.333-1.333v-4h-4c-0.8 0-1.333-0.533-1.333-1.333s0.533-1.333 1.333-1.333h5.333c0.8 0 1.333 0.533 1.333 1.333v5.333c0 0.8-0.533 1.333-1.333 1.333zM1.333 12c-0.8 0-1.333-0.533-1.333-1.333v-5.333c0-0.8 0.533-1.333 1.333-1.333h5.333c0.8 0 1.333 0.533 1.333 1.333s-0.533 1.333-1.333 1.333h-4v4c0 0.8-0.533 1.333-1.333 1.333z'],\n\t            'setting': ['0 0 32 28', 'M28.633 17.104c0.035 0.21 0.026 0.463-0.026 0.76s-0.14 0.598-0.262 0.904c-0.122 0.306-0.271 0.581-0.445 0.825s-0.367 0.419-0.576 0.524c-0.209 0.105-0.393 0.157-0.55 0.157s-0.332-0.035-0.524-0.105c-0.175-0.052-0.393-0.1-0.655-0.144s-0.528-0.052-0.799-0.026c-0.271 0.026-0.541 0.083-0.812 0.17s-0.502 0.236-0.694 0.445c-0.419 0.437-0.664 0.934-0.734 1.493s0.009 1.092 0.236 1.598c0.175 0.349 0.148 0.699-0.079 1.048-0.105 0.14-0.271 0.284-0.498 0.432s-0.476 0.284-0.747 0.406-0.555 0.218-0.851 0.288c-0.297 0.070-0.559 0.105-0.786 0.105-0.157 0-0.306-0.061-0.445-0.183s-0.236-0.253-0.288-0.393h-0.026c-0.192-0.541-0.52-1.009-0.982-1.402s-1-0.589-1.611-0.589c-0.594 0-1.131 0.197-1.611 0.589s-0.816 0.851-1.009 1.375c-0.087 0.21-0.218 0.362-0.393 0.458s-0.367 0.144-0.576 0.144c-0.244 0-0.52-0.044-0.825-0.131s-0.611-0.197-0.917-0.327c-0.306-0.131-0.581-0.284-0.825-0.458s-0.428-0.349-0.55-0.524c-0.087-0.122-0.135-0.266-0.144-0.432s0.057-0.397 0.197-0.694c0.192-0.402 0.266-0.86 0.223-1.375s-0.266-0.991-0.668-1.428c-0.244-0.262-0.541-0.432-0.891-0.511s-0.681-0.109-0.995-0.092c-0.367 0.017-0.742 0.087-1.127 0.21-0.244 0.070-0.489 0.052-0.734-0.052-0.192-0.070-0.371-0.231-0.537-0.485s-0.314-0.533-0.445-0.838c-0.131-0.306-0.231-0.62-0.301-0.943s-0.087-0.59-0.052-0.799c0.052-0.384 0.227-0.629 0.524-0.734 0.524-0.21 0.995-0.555 1.415-1.035s0.629-1.017 0.629-1.611c0-0.611-0.21-1.144-0.629-1.598s-0.891-0.786-1.415-0.996c-0.157-0.052-0.288-0.179-0.393-0.38s-0.157-0.406-0.157-0.616c0-0.227 0.035-0.48 0.105-0.76s0.162-0.55 0.275-0.812 0.244-0.502 0.393-0.72c0.148-0.218 0.31-0.38 0.485-0.485 0.14-0.087 0.275-0.122 0.406-0.105s0.275 0.052 0.432 0.105c0.524 0.21 1.070 0.275 1.637 0.197s1.070-0.327 1.506-0.747c0.21-0.209 0.362-0.467 0.458-0.773s0.157-0.607 0.183-0.904c0.026-0.297 0.026-0.568 0-0.812s-0.048-0.419-0.065-0.524c-0.035-0.105-0.066-0.227-0.092-0.367s-0.013-0.262 0.039-0.367c0.105-0.244 0.293-0.458 0.563-0.642s0.563-0.336 0.878-0.458c0.314-0.122 0.62-0.214 0.917-0.275s0.533-0.092 0.707-0.092c0.227 0 0.406 0.074 0.537 0.223s0.223 0.301 0.275 0.458c0.192 0.471 0.507 0.886 0.943 1.244s0.952 0.537 1.546 0.537c0.611 0 1.153-0.17 1.624-0.511s0.803-0.773 0.996-1.297c0.070-0.14 0.179-0.284 0.327-0.432s0.301-0.223 0.458-0.223c0.244 0 0.511 0.035 0.799 0.105s0.572 0.166 0.851 0.288c0.279 0.122 0.537 0.279 0.773 0.472s0.423 0.402 0.563 0.629c0.087 0.14 0.113 0.293 0.079 0.458s-0.070 0.284-0.105 0.354c-0.227 0.506-0.297 1.039-0.21 1.598s0.341 1.048 0.76 1.467c0.419 0.419 0.934 0.651 1.546 0.694s1.179-0.057 1.703-0.301c0.14-0.087 0.31-0.122 0.511-0.105s0.371 0.096 0.511 0.236c0.262 0.244 0.493 0.616 0.694 1.113s0.336 1 0.406 1.506c0.035 0.297-0.013 0.528-0.144 0.694s-0.266 0.275-0.406 0.327c-0.542 0.192-1.004 0.528-1.388 1.009s-0.576 1.026-0.576 1.637c0 0.594 0.162 1.113 0.485 1.559s0.747 0.764 1.27 0.956c0.122 0.070 0.227 0.14 0.314 0.21 0.192 0.157 0.323 0.358 0.393 0.602v0zM16.451 19.462c0.786 0 1.528-0.149 2.227-0.445s1.305-0.707 1.821-1.231c0.515-0.524 0.921-1.131 1.218-1.821s0.445-1.428 0.445-2.214c0-0.786-0.148-1.524-0.445-2.214s-0.703-1.292-1.218-1.808c-0.515-0.515-1.122-0.921-1.821-1.218s-1.441-0.445-2.227-0.445c-0.786 0-1.524 0.148-2.214 0.445s-1.292 0.703-1.808 1.218c-0.515 0.515-0.921 1.118-1.218 1.808s-0.445 1.428-0.445 2.214c0 0.786 0.149 1.524 0.445 2.214s0.703 1.297 1.218 1.821c0.515 0.524 1.118 0.934 1.808 1.231s1.428 0.445 2.214 0.445v0z'],\n\t            'right': ['0 0 32 32', 'M22 16l-10.105-10.6-1.895 1.987 8.211 8.613-8.211 8.612 1.895 1.988 8.211-8.613z'],\n\t            'comment': ['0 0 32 32', 'M27.128 0.38h-22.553c-2.336 0-4.229 1.825-4.229 4.076v16.273c0 2.251 1.893 4.076 4.229 4.076h4.229v-2.685h8.403l-8.784 8.072 1.566 1.44 7.429-6.827h9.71c2.335 0 4.229-1.825 4.229-4.076v-16.273c0-2.252-1.894-4.076-4.229-4.076zM28.538 19.403c0 1.5-1.262 2.717-2.819 2.717h-8.36l-0.076-0.070-0.076 0.070h-11.223c-1.557 0-2.819-1.217-2.819-2.717v-13.589c0-1.501 1.262-2.718 2.819-2.718h19.734c1.557 0 2.819-0.141 2.819 1.359v14.947zM9.206 10.557c-1.222 0-2.215 0.911-2.215 2.036s0.992 2.035 2.215 2.035c1.224 0 2.216-0.911 2.216-2.035s-0.992-2.036-2.216-2.036zM22.496 10.557c-1.224 0-2.215 0.911-2.215 2.036s0.991 2.035 2.215 2.035c1.224 0 2.215-0.911 2.215-2.035s-0.991-2.036-2.215-2.036zM15.852 10.557c-1.224 0-2.215 0.911-2.215 2.036s0.991 2.035 2.215 2.035c1.222 0 2.215-0.911 2.215-2.035s-0.992-2.036-2.215-2.036z'],\n\t            'comment-off': ['0 0 32 32', 'M27.090 0.131h-22.731c-2.354 0-4.262 1.839-4.262 4.109v16.401c0 2.269 1.908 4.109 4.262 4.109h4.262v-2.706h8.469l-8.853 8.135 1.579 1.451 7.487-6.88h9.787c2.353 0 4.262-1.84 4.262-4.109v-16.401c0-2.27-1.909-4.109-4.262-4.109v0zM28.511 19.304c0 1.512-1.272 2.738-2.841 2.738h-8.425l-0.076-0.070-0.076 0.070h-11.311c-1.569 0-2.841-1.226-2.841-2.738v-13.696c0-1.513 1.272-2.739 2.841-2.739h19.889c1.569 0 2.841-0.142 2.841 1.37v15.064z'],\n\t            'send': ['0 0 32 32', 'M13.725 30l3.9-5.325-3.9-1.125v6.45zM0 17.5l11.050 3.35 13.6-11.55-10.55 12.425 11.8 3.65 6.1-23.375-32 15.5z']\n\t        };\n\t        this.getSVG = function (type) {\n\t            return '\\n                <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"100%\" version=\"1.1\" viewBox=\"' + _this.svg[type][0] + '\" width=\"100%\">\\n                    <use xlink:href=\"#dplayer-' + type + '\"></use>\\n                    <path class=\"dplayer-fill\" d=\"' + _this.svg[type][1] + '\" id=\"dplayer-' + type + '\"></path>\\n                </svg>\\n            ';\n\t        };\n\t\n\t        this.isMobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n\t        // compatibility: some mobile browsers don't suppose autoplay\n\t        if (this.isMobile) {\n\t            option.autoplay = false;\n\t        }\n\t\n\t        // default options\n\t        var defaultOption = {\n\t            element: document.getElementsByClassName('dplayer')[0],\n\t            autoplay: false,\n\t            theme: '#b7daff',\n\t            loop: false\n\t        };\n\t        for (var defaultKey in defaultOption) {\n\t            if (defaultOption.hasOwnProperty(defaultKey) && !option.hasOwnProperty(defaultKey)) {\n\t                option[defaultKey] = defaultOption[defaultKey];\n\t            }\n\t        }\n\t\n\t        this.option = option;\n\t        this.loop = option.loop;\n\t\n\t        /**\n\t         * Parse second to 00:00 format\n\t         *\n\t         * @param {Number} second\n\t         * @return {String} 00:00 format\n\t         */\n\t        this.secondToTime = function (second) {\n\t            var add0 = function add0(num) {\n\t                return num < 10 ? '0' + num : '' + num;\n\t            };\n\t            var min = parseInt(second / 60);\n\t            var sec = parseInt(second - min * 60);\n\t            return add0(min) + ':' + add0(sec);\n\t        };\n\t\n\t        /**\n\t         * Update progress bar, including loading progress bar and play progress bar\n\t         *\n\t         * @param {String} type - Point out which bar it is, should be played loaded or volume\n\t         * @param {Number} percentage\n\t         * @param {String} direction - Point out the direction of this bar, Should be height or width\n\t         */\n\t        this.updateBar = function (type, percentage, direction) {\n\t            percentage = percentage > 0 ? percentage : 0;\n\t            percentage = percentage < 1 ? percentage : 1;\n\t            _this[type + 'Bar'].style[direction] = percentage * 100 + '%';\n\t        };\n\t\n\t        // define DPlayer events\n\t        this.eventTypes = ['play', 'pause', 'canplay', 'playing', 'ended', 'error'];\n\t        this.event = {};\n\t        for (var i = 0; i < this.eventTypes.length; i++) {\n\t            this.event[this.eventTypes[i]] = [];\n\t        }\n\t        this.trigger = function (type) {\n\t            for (var _i = 0; _i < _this.event[type].length; _i++) {\n\t                _this.event[type][_i]();\n\t            }\n\t        };\n\t    }\n\t\n\t    /**\n\t     * AutoLink initialization function\n\t     */\n\t\n\t\n\t    _createClass(DPlayer, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this2 = this;\n\t\n\t            this.element = this.option.element;\n\t            if (!this.option.danmaku) {\n\t                this.element.classList.add('dplayer-no-danmaku');\n\t            }\n\t\n\t            this.element.innerHTML = '\\n            <div class=\"dplayer-mask\"></div>\\n            <div class=\"dplayer-video-wrap\">\\n                <video class=\"dplayer-video\" ' + (this.option.video.pic ? 'poster=\"' + this.option.video.pic + '\"' : '') + '>\\n                    <source src=\"' + this.option.video.url + '\" type=\"video/mp4\">\\n                </video>\\n                <div class=\"dplayer-danmaku\"></div>\\n                <div class=\"dplayer-bezel\">\\n                    <span class=\"dplayer-bezel-icon\"></span>\\n                   ' + (this.option.danmaku ? '<span class=\"dplayer-danloading\">弹幕加载中</span>' : '') + '\\n                    <span class=\"diplayer-loading-icon\">\\n                        <svg height=\"100%\" version=\"1.1\" viewBox=\"0 0 22 22\" width=\"100%\">\\n                            <svg x=\"7\" y=\"1\">\\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-0\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\\n                            </svg>\\n                            <svg x=\"11\" y=\"3\">\\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-1\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\\n                            </svg>\\n                            <svg x=\"13\" y=\"7\">\\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-2\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\\n                            </svg>\\n                            <svg x=\"11\" y=\"11\">\\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-3\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\\n                            </svg>\\n                            <svg x=\"7\" y=\"13\">\\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-4\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\\n                            </svg>\\n                            <svg x=\"3\" y=\"11\">\\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-5\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\\n                            </svg>\\n                            <svg x=\"1\" y=\"7\">\\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-6\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\\n                            </svg>\\n                            <svg x=\"3\" y=\"3\">\\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-7\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\\n                            </svg>\\n                        </svg>\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\"dplayer-controller-mask\"></div>\\n            <div class=\"dplayer-controller\">\\n                <div class=\"dplayer-icons dplayer-icons-left\">\\n                    <button class=\"dplayer-icon dplayer-play-icon\">' + this.getSVG('play') + '     </button>\\n                    <div class=\"dplayer-volume\">\\n                        <button class=\"dplayer-icon dplayer-volume-icon\">' + this.getSVG('volume-down') + ('         </button>\\n                        <div class=\"dplayer-volume-bar-wrap\">\\n                            <div class=\"dplayer-volume-bar\">\\n                                <div class=\"dplayer-volume-bar-inner\" style=\"width: 70%; background: ' + this.option.theme + ';\">\\n                                    <span class=\"dplayer-thumb\" style=\"background: ' + this.option.theme + '\"></span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <span class=\"dplayer-time\"><span class=\"dplayer-ptime\">0:00</span> / <span class=\"dplayer-dtime\">0:00</span></span>\\n                </div>\\n                <div class=\"dplayer-icons dplayer-icons-right\">\\n                    <div class=\"dplayer-comment\">\\n                        <button class=\"dplayer-icon dplayer-comment-icon\">') + this.getSVG('comment') + '         </button>\\n                        <div class=\"dplayer-comment-box\">\\n                            <button class=\"dplayer-icon dplayer-comment-setting-icon\">' + this.getSVG('setting') + '             </button>\\n                            <div class=\"dplayer-comment-setting-box\">\\n                                <div class=\"dplayer-comment-setting-type\">\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-type\" value=\"top\">\\n                                        <span>顶部</span>\\n                                    </label>\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-type\" value=\"right\" checked>\\n                                        <span>滚动</span>\\n                                    </label>\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-type\" value=\"bottom\">\\n                                        <span>底部</span>\\n                                    </label>\\n                                </div>\\n                                <div class=\"dplayer-comment-setting-color\">\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#fff\" checked>\\n                                        <span style=\"background: #fff; border: 1px solid rgba(0,0,0,.1);\"></span>\\n                                    </label>\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#e54256\">\\n                                        <span style=\"background: #e54256\"></span>\\n                                    </label>\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#FFAB00\">\\n                                        <span style=\"background: #FFAB00\"></span>\\n                                    </label>\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#ffe133\">\\n                                        <span style=\"background: #ffe133\"></span>\\n                                    </label>\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#64DD17\">\\n                                        <span style=\"background: #64DD17\"></span>\\n                                    </label>\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#39ccff\">\\n                                        <span style=\"background: #39ccff\"></span>\\n                                    </label>\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#D500F9\">\\n                                        <span style=\"background: #D500F9\"></span>\\n                                    </label>\\n                                    <label>\\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#444\">\\n                                        <span style=\"background: #444;\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <input class=\"dplayer-comment-input\" type=\"text\" placeholder=\"输入弹幕，回车发送\" maxlength=\"30\">\\n                            <button class=\"dplayer-icon dplayer-send-icon\">' + this.getSVG('send') + '             </button>\\n                        </div>\\n                    </div>\\n                    <div class=\"dplayer-setting\">\\n                        <button class=\"dplayer-icon dplayer-setting-icon\">' + this.getSVG('setting') + '         </button>\\n                        <div class=\"dplayer-setting-box\"></div>\\n                    </div>\\n                    <button class=\"dplayer-icon dplayer-full-icon\">' + this.getSVG('full') + ('     </button>\\n                </div>\\n                <div class=\"dplayer-bar-wrap\">\\n                    <div class=\"dplayer-bar\">\\n                        <div class=\"dplayer-loaded\" style=\"width: 0;\"></div>\\n                        <div class=\"dplayer-played\" style=\"width: 0; background: ' + this.option.theme + '\">\\n                            <span class=\"dplayer-thumb\" style=\"background: ' + this.option.theme + '\"></span>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"dplayer-menu\">\\n                <div class=\"dplayer-menu-item\"><span class=\"dplayer-menu-label\"><a target=\"_blank\" href=\"http://diygod.me/\">关于作者</a></span></div>\\n                <div class=\"dplayer-menu-item\"><span class=\"dplayer-menu-label\"><a target=\"_blank\" href=\"https://github.com/DIYgod/DPlayer/issues\">播放器意见反馈</a></span></div>\\n                <div class=\"dplayer-menu-item\"><span class=\"dplayer-menu-label\"><a target=\"_blank\" href=\"https://github.com/DIYgod/DPlayer\">关于 DPlayer 播放器</a></span></div>\\n            </div>\\n        ');\n\t\n\t            // get this audio object\n\t            this.audio = this.element.getElementsByClassName('dplayer-video')[0];\n\t\n\t            this.bezel = this.element.getElementsByClassName('dplayer-bezel-icon')[0];\n\t            this.bezel.addEventListener('animationend', function () {\n\t                _this2.bezel.classList.remove('dplayer-bezel-transition');\n\t            });\n\t\n\t            this.ptime = this.element.getElementsByClassName('dplayer-ptime')[0];\n\t\n\t            // play and pause button\n\t            this.playButton = this.element.getElementsByClassName('dplayer-play-icon')[0];\n\t            this.shouldpause = true;\n\t            this.toggle = function () {\n\t                if (_this2.audio.paused) {\n\t                    _this2.play();\n\t                } else {\n\t                    _this2.pause();\n\t                }\n\t            };\n\t            this.playButton.addEventListener('click', this.toggle);\n\t            this.element.getElementsByClassName('dplayer-video-wrap')[0].addEventListener('click', this.toggle);\n\t            this.element.getElementsByClassName('dplayer-controller-mask')[0].addEventListener('click', this.toggle);\n\t\n\t            /**\n\t             * control play progress\n\t             */\n\t            // get element's view position\n\t            var getElementViewLeft = function getElementViewLeft(element) {\n\t                var actualLeft = element.offsetLeft;\n\t                var current = element.offsetParent;\n\t                var elementScrollLeft = void 0;\n\t                if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement) {\n\t                    while (current !== null) {\n\t                        actualLeft += current.offsetLeft;\n\t                        current = current.offsetParent;\n\t                    }\n\t                } else {\n\t                    while (current !== null && current !== _this2.element) {\n\t                        actualLeft += current.offsetLeft;\n\t                        current = current.offsetParent;\n\t                    }\n\t                }\n\t                elementScrollLeft = document.body.scrollLeft + document.documentElement.scrollLeft;\n\t                return actualLeft - elementScrollLeft;\n\t            };\n\t\n\t            var getElementViewTop = function getElementViewTop(element) {\n\t                var actualTop = element.offsetTop;\n\t                var current = element.offsetParent;\n\t                var elementScrollTop = void 0;\n\t                if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement) {\n\t                    while (current !== null) {\n\t                        actualTop += current.offsetTop;\n\t                        current = current.offsetParent;\n\t                    }\n\t                } else {\n\t                    while (current !== null && current !== _this2.element) {\n\t                        actualTop += current.offsetTop;\n\t                        current = current.offsetParent;\n\t                    }\n\t                }\n\t                elementScrollTop = document.body.scrollTop + document.documentElement.scrollTop;\n\t                return actualTop - elementScrollTop;\n\t            };\n\t\n\t            this.playedBar = this.element.getElementsByClassName('dplayer-played')[0];\n\t            this.loadedBar = this.element.getElementsByClassName('dplayer-loaded')[0];\n\t            this.bar = this.element.getElementsByClassName('dplayer-bar-wrap')[0];\n\t            var barWidth = void 0;\n\t\n\t            if (this.option.danmaku) {\n\t                this.audio.addEventListener('seeking', function () {\n\t                    for (var i = 0; i < _this2.dan.length; i++) {\n\t                        if (_this2.dan[i].time >= _this2.audio.currentTime) {\n\t                            _this2.danIndex = i;\n\t                            return;\n\t                        }\n\t                        _this2.danIndex = _this2.dan.length;\n\t                    }\n\t                });\n\t            }\n\t\n\t            var lastPlayPos = 0;\n\t            var currentPlayPos = 0;\n\t            var bufferingDetected = false;\n\t            this.setTime = function () {\n\t                _this2.playedTime = setInterval(function () {\n\t                    // whether the video is buffering\n\t                    currentPlayPos = _this2.audio.currentTime;\n\t                    if (!bufferingDetected && currentPlayPos < lastPlayPos + 0.01 && !_this2.audio.paused) {\n\t                        _this2.element.classList.add('dplayer-loading');\n\t                        bufferingDetected = true;\n\t                    }\n\t                    if (bufferingDetected && currentPlayPos > lastPlayPos + 0.01 && !_this2.audio.paused) {\n\t                        _this2.element.classList.remove('dplayer-loading');\n\t                        bufferingDetected = false;\n\t                    }\n\t                    lastPlayPos = currentPlayPos;\n\t\n\t                    _this2.updateBar('played', _this2.audio.currentTime / _this2.audio.duration, 'width');\n\t                    _this2.ptime.innerHTML = _this2.secondToTime(_this2.audio.currentTime);\n\t                    _this2.trigger('playing');\n\t                }, 100);\n\t                if (_this2.option.danmaku) {\n\t                    _this2.danmakuTime = setInterval(function () {\n\t                        var item = _this2.dan[_this2.danIndex];\n\t                        while (item && _this2.audio.currentTime >= parseFloat(item.time)) {\n\t                            _this2.danmakuIn(item.text, item.color, item.type);\n\t                            _this2.danIndex++;\n\t                            item = _this2.dan[_this2.danIndex];\n\t                        }\n\t                    }, 0);\n\t                }\n\t            };\n\t            this.clearTime = function () {\n\t                clearInterval(_this2.playedTime);\n\t                if (_this2.option.danmaku) {\n\t                    clearInterval(_this2.danmakuTime);\n\t                }\n\t            };\n\t\n\t            this.bar.addEventListener('click', function (event) {\n\t                var e = event || window.event;\n\t                barWidth = _this2.bar.clientWidth;\n\t                var percentage = (e.clientX - getElementViewLeft(_this2.bar)) / barWidth;\n\t                percentage = percentage > 0 ? percentage : 0;\n\t                percentage = percentage < 1 ? percentage : 1;\n\t                _this2.updateBar('played', percentage, 'width');\n\t                _this2.audio.currentTime = parseFloat(_this2.playedBar.style.width) / 100 * _this2.audio.duration;\n\t            });\n\t\n\t            var thumbMove = function thumbMove(event) {\n\t                var e = event || window.event;\n\t                var percentage = (e.clientX - getElementViewLeft(_this2.bar)) / barWidth;\n\t                percentage = percentage > 0 ? percentage : 0;\n\t                percentage = percentage < 1 ? percentage : 1;\n\t                _this2.updateBar('played', percentage, 'width');\n\t                _this2.element.getElementsByClassName('dplayer-ptime')[0].innerHTML = _this2.secondToTime(percentage * _this2.audio.duration);\n\t            };\n\t\n\t            var thumbUp = function thumbUp() {\n\t                document.removeEventListener('mouseup', thumbUp);\n\t                document.removeEventListener('mousemove', thumbMove);\n\t                _this2.audio.currentTime = parseFloat(_this2.playedBar.style.width) / 100 * _this2.audio.duration;\n\t                _this2.setTime();\n\t            };\n\t\n\t            this.bar.addEventListener('mousedown', function () {\n\t                barWidth = _this2.bar.clientWidth;\n\t                _this2.clearTime();\n\t                document.addEventListener('mousemove', thumbMove);\n\t                document.addEventListener('mouseup', thumbUp);\n\t            });\n\t\n\t            /**\n\t             * control volume\n\t             */\n\t            this.volumeBar = this.element.getElementsByClassName('dplayer-volume-bar-inner')[0];\n\t            var volumeEle = this.element.getElementsByClassName('dplayer-volume')[0];\n\t            var volumeBarWrapWrap = this.element.getElementsByClassName('dplayer-volume-bar-wrap')[0];\n\t            var volumeBarWrap = this.element.getElementsByClassName('dplayer-volume-bar')[0];\n\t            var volumeicon = this.element.getElementsByClassName('dplayer-volume-icon')[0];\n\t            var vWidth = 35;\n\t            var switchVolumeIcon = function switchVolumeIcon() {\n\t                if (_this2.audio.volume >= 0.8) {\n\t                    volumeicon.innerHTML = _this2.getSVG('volume-up');\n\t                } else if (_this2.audio.volume > 0) {\n\t                    volumeicon.innerHTML = _this2.getSVG('volume-down');\n\t                } else {\n\t                    volumeicon.innerHTML = _this2.getSVG('volume-off');\n\t                }\n\t            };\n\t            var volumeMove = function volumeMove(event) {\n\t                var e = event || window.event;\n\t                var percentage = (e.clientX - getElementViewLeft(volumeBarWrap) - 5.5) / vWidth;\n\t                percentage = percentage > 0 ? percentage : 0;\n\t                percentage = percentage < 1 ? percentage : 1;\n\t                _this2.updateBar('volume', percentage, 'width');\n\t                _this2.audio.volume = percentage;\n\t                if (_this2.audio.muted) {\n\t                    _this2.audio.muted = false;\n\t                }\n\t                switchVolumeIcon();\n\t            };\n\t            var volumeUp = function volumeUp() {\n\t                document.removeEventListener('mouseup', volumeUp);\n\t                document.removeEventListener('mousemove', volumeMove);\n\t                volumeEle.classList.remove('dplayer-volume-active');\n\t            };\n\t\n\t            volumeBarWrapWrap.addEventListener('click', function (event) {\n\t                var e = event || window.event;\n\t                var percentage = (e.clientX - getElementViewLeft(volumeBarWrap) - 5.5) / vWidth;\n\t                percentage = percentage > 0 ? percentage : 0;\n\t                percentage = percentage < 1 ? percentage : 1;\n\t                _this2.updateBar('volume', percentage, 'width');\n\t                _this2.audio.volume = percentage;\n\t                if (_this2.audio.muted) {\n\t                    _this2.audio.muted = false;\n\t                }\n\t                switchVolumeIcon();\n\t            });\n\t            volumeBarWrapWrap.addEventListener('mousedown', function () {\n\t                document.addEventListener('mousemove', volumeMove);\n\t                document.addEventListener('mouseup', volumeUp);\n\t                volumeEle.classList.add('dplayer-volume-active');\n\t            });\n\t            volumeicon.addEventListener('click', function () {\n\t                if (_this2.audio.muted) {\n\t                    _this2.audio.muted = false;\n\t                    switchVolumeIcon();\n\t                    _this2.updateBar('volume', _this2.audio.volume, 'width');\n\t                } else {\n\t                    _this2.audio.muted = true;\n\t                    volumeicon.innerHTML = _this2.getSVG('volume-off');\n\t                    _this2.updateBar('volume', 0, 'width');\n\t                }\n\t            });\n\t\n\t            /**\n\t             * auto hide controller\n\t             */\n\t            var hideTime = 0;\n\t            var hideController = function hideController() {\n\t                _this2.element.classList.remove('dplayer-hide-controller');\n\t                clearTimeout(hideTime);\n\t                hideTime = setTimeout(function () {\n\t                    if (_this2.audio.played.length) {\n\t                        _this2.element.classList.add('dplayer-hide-controller');\n\t                        closeSetting();\n\t                        closeComment();\n\t                    }\n\t                }, 2000);\n\t            };\n\t            this.element.addEventListener('mousemove', hideController);\n\t            this.element.addEventListener('click', hideController);\n\t\n\t            /***\n\t             * setting\n\t             */\n\t            this.danOpacity = 0.7;\n\t            var settingHTML = {\n\t                'original': '\\n                    <div class=\"dplayer-setting-item dplayer-setting-loop\">\\n                        <span class=\"dplayer-label\">洗脑循环</span>\\n                        <div class=\"dplayer-toggle\">\\n                            <input class=\"dplayer-toggle-setting-input\" type=\"checkbox\" name=\"dplayer-toggle\" id=\"dplayer-toggle\">\\n                            <label for=\"dplayer-toggle\"></label>\\n                        </div>\\n                    </div>\\n                    <div class=\"dplayer-setting-item dplayer-setting-speed\">\\n                        <span class=\"dplayer-label\">速度</span>\\n                        <div class=\"dplayer-toggle\">' + this.getSVG('right') + ('     </div>\\n                    </div>\\n                    <div class=\"dplayer-setting-item dplayer-setting-danmaku\">\\n                        <span class=\"dplayer-label\">弹幕透明度</span>\\n                        <div class=\"dplayer-danmaku-bar-wrap\">\\n                            <div class=\"dplayer-danmaku-bar\">\\n                                <div class=\"dplayer-danmaku-bar-inner\" style=\"width: ' + this.danOpacity * 100 + '%\">\\n                                    <span class=\"dplayer-thumb\"></span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>'),\n\t                'speed': '\\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"0.5\">\\n                        <span class=\"dplayer-label\">0.5</span>\\n                    </div>\\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"0.75\">\\n                        <span class=\"dplayer-label\">0.75</span>\\n                    </div>\\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"1\">\\n                        <span class=\"dplayer-label\">正常</span>\\n                    </div>\\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"1.25\">\\n                        <span class=\"dplayer-label\">1.25</span>\\n                    </div>\\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"1.5\">\\n                        <span class=\"dplayer-label\">1.5</span>\\n                    </div>\\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"2\">\\n                        <span class=\"dplayer-label\">2</span>\\n                    </div>'\n\t            };\n\t\n\t            // toggle setting box\n\t            var settingIcon = this.element.getElementsByClassName('dplayer-setting-icon')[0];\n\t            var settingBox = this.element.getElementsByClassName('dplayer-setting-box')[0];\n\t            var mask = this.element.getElementsByClassName('dplayer-mask')[0];\n\t            settingBox.innerHTML = settingHTML.original;\n\t\n\t            var closeSetting = function closeSetting() {\n\t                if (settingBox.classList.contains('dplayer-setting-box-open')) {\n\t                    settingBox.classList.remove('dplayer-setting-box-open');\n\t                    mask.classList.remove('dplayer-mask-show');\n\t                    setTimeout(function () {\n\t                        settingBox.classList.remove('dplayer-setting-box-narrow');\n\t                        settingBox.innerHTML = settingHTML.original;\n\t                        settingEvent();\n\t                    }, 300);\n\t                }\n\t            };\n\t            var openSetting = function openSetting() {\n\t                settingBox.classList.add('dplayer-setting-box-open');\n\t                mask.classList.add('dplayer-mask-show');\n\t            };\n\t\n\t            mask.addEventListener('click', function () {\n\t                closeSetting();\n\t            });\n\t            settingIcon.addEventListener('click', function () {\n\t                openSetting();\n\t            });\n\t\n\t            var settingEvent = function settingEvent() {\n\t                // loop control\n\t                var loopEle = _this2.element.getElementsByClassName('dplayer-setting-loop')[0];\n\t                var loopToggle = loopEle.getElementsByClassName('dplayer-toggle-setting-input')[0];\n\t\n\t                loopToggle.checked = _this2.loop;\n\t\n\t                loopEle.addEventListener('click', function () {\n\t                    loopToggle.checked = !loopToggle.checked;\n\t                    if (loopToggle.checked) {\n\t                        _this2.loop = true;\n\t                        _this2.audio.loop = _this2.loop;\n\t                    } else {\n\t                        _this2.loop = false;\n\t                        _this2.audio.loop = _this2.loop;\n\t                    }\n\t                    closeSetting();\n\t                });\n\t                loopToggle.addEventListener('change', function () {\n\t                    if (loopToggle.checked) {\n\t                        _this2.loop = true;\n\t                        _this2.audio.loop = _this2.loop;\n\t                    } else {\n\t                        _this2.loop = false;\n\t                        _this2.audio.loop = _this2.loop;\n\t                    }\n\t                    closeSetting();\n\t                });\n\t\n\t                // speed control\n\t                var speedEle = _this2.element.getElementsByClassName('dplayer-setting-speed')[0];\n\t                speedEle.addEventListener('click', function () {\n\t                    settingBox.classList.add('dplayer-setting-box-narrow');\n\t                    settingBox.innerHTML = settingHTML.speed;\n\t\n\t                    var speedItem = settingBox.getElementsByClassName('dplayer-setting-speed-item');\n\t\n\t                    var _loop = function _loop(i) {\n\t                        speedItem[i].addEventListener('click', function () {\n\t                            _this2.audio.playbackRate = speedItem[i].dataset.speed;\n\t                            closeSetting();\n\t                        });\n\t                    };\n\t\n\t                    for (var i = 0; i < speedItem.length; i++) {\n\t                        _loop(i);\n\t                    }\n\t                });\n\t\n\t                if (_this2.option.danmaku) {\n\t                    (function () {\n\t                        // danmaku opacity\n\t                        _this2.danmakuBar = _this2.element.getElementsByClassName('dplayer-danmaku-bar-inner')[0];\n\t                        var danmakuBarWrapWrap = _this2.element.getElementsByClassName('dplayer-danmaku-bar-wrap')[0];\n\t                        var danmakuBarWrap = _this2.element.getElementsByClassName('dplayer-danmaku-bar')[0];\n\t                        var danmakuSettingBox = _this2.element.getElementsByClassName('dplayer-setting-danmaku')[0];\n\t                        var dWidth = 130;\n\t                        _this2.updateBar('danmaku', _this2.danOpacity, 'width');\n\t\n\t                        var danmakuMove = function danmakuMove(event) {\n\t                            var e = event || window.event;\n\t                            var percentage = (e.clientX - getElementViewLeft(danmakuBarWrap)) / dWidth;\n\t                            percentage = percentage > 0 ? percentage : 0;\n\t                            percentage = percentage < 1 ? percentage : 1;\n\t                            _this2.updateBar('danmaku', percentage, 'width');\n\t                            var items = _this2.element.getElementsByClassName('dplayer-danmaku-item');\n\t                            for (var i = 0; i < items.length; i++) {\n\t                                items[i].style.opacity = percentage;\n\t                            }\n\t                            _this2.danOpacity = percentage;\n\t                        };\n\t                        var danmakuUp = function danmakuUp() {\n\t                            document.removeEventListener('mouseup', danmakuUp);\n\t                            document.removeEventListener('mousemove', danmakuMove);\n\t                            danmakuSettingBox.classList.remove('dplayer-setting-danmaku-active');\n\t                        };\n\t\n\t                        danmakuBarWrapWrap.addEventListener('click', function (event) {\n\t                            var e = event || window.event;\n\t                            var percentage = (e.clientX - getElementViewLeft(danmakuBarWrap)) / dWidth;\n\t                            percentage = percentage > 0 ? percentage : 0;\n\t                            percentage = percentage < 1 ? percentage : 1;\n\t                            _this2.updateBar('danmaku', percentage, 'width');\n\t                            var items = _this2.element.getElementsByClassName('dplayer-danmaku-item');\n\t                            for (var i = 0; i < items.length; i++) {\n\t                                items[i].style.opacity = percentage;\n\t                            }\n\t                            _this2.danOpacity = percentage;\n\t                        });\n\t                        danmakuBarWrapWrap.addEventListener('mousedown', function () {\n\t                            document.addEventListener('mousemove', danmakuMove);\n\t                            document.addEventListener('mouseup', danmakuUp);\n\t                            danmakuSettingBox.classList.add('dplayer-setting-danmaku-active');\n\t                        });\n\t                    })();\n\t                }\n\t            };\n\t            settingEvent();\n\t\n\t            /**\n\t             * audio events\n\t             */\n\t            // show audio time: the metadata has loaded or changed\n\t            this.audio.addEventListener('durationchange', function () {\n\t                if (_this2.audio.duration !== 1) {\n\t                    // compatibility: Android browsers will output 1 at first\n\t                    _this2.element.getElementsByClassName('dplayer-dtime')[0].innerHTML = _this2.secondToTime(_this2.audio.duration);\n\t                }\n\t            });\n\t\n\t            // show audio loaded bar: to inform interested parties of progress downloading the media\n\t            this.audio.addEventListener('progress', function () {\n\t                var percentage = _this2.audio.buffered.length ? _this2.audio.buffered.end(_this2.audio.buffered.length - 1) / _this2.audio.duration : 0;\n\t                _this2.updateBar('loaded', percentage, 'width');\n\t            });\n\t\n\t            // audio download error: an error occurs\n\t            this.audio.addEventListener('error', function () {\n\t                _this2.element.getElementsByClassName('dplayer-ptime')[0].innerHTML = 'Error happens ╥﹏╥';\n\t                _this2.trigger('pause');\n\t            });\n\t\n\t            // audio can play: enough data is available that the media can be played\n\t            this.audio.addEventListener('canplay', function () {\n\t                _this2.trigger('canplay');\n\t            });\n\t\n\t            // music end\n\t            this.ended = false;\n\t            this.audio.addEventListener('ended', function () {\n\t                _this2.updateBar('played', 1, 'width');\n\t                if (!_this2.loop) {\n\t                    _this2.ended = true;\n\t                    _this2.pause();\n\t                    _this2.trigger('ended');\n\t                }\n\t            });\n\t\n\t            // control volume\n\t            this.audio.volume = parseInt(this.element.getElementsByClassName('dplayer-volume-bar-inner')[0].style.width) / 100;\n\t\n\t            // loop\n\t            this.audio.loop = this.loop;\n\t\n\t            // set duration time\n\t            if (this.audio.duration !== 1) {\n\t                // compatibility: Android browsers will output 1 at first\n\t                this.element.getElementsByClassName('dplayer-dtime')[0].innerHTML = this.audio.duration ? this.secondToTime(this.audio.duration) : '00:00';\n\t            }\n\t\n\t            /**\n\t             * danmaku display\n\t             */\n\t            var danContainer = this.element.getElementsByClassName('dplayer-danmaku')[0];\n\t            var itemHeight = 30;\n\t            var danWidth = void 0;\n\t            var danHeight = void 0;\n\t            var itemY = void 0;\n\t            var danTunnel = {\n\t                right: {},\n\t                top: {},\n\t                bottom: {}\n\t            };\n\t\n\t            var danItemRight = function danItemRight(ele) {\n\t                return danContainer.getBoundingClientRect().right - ele.getBoundingClientRect().right;\n\t            };\n\t\n\t            var danSpeed = function danSpeed(ele) {\n\t                return (danWidth + ele.offsetWidth) / 5;\n\t            };\n\t\n\t            var getTunnel = function getTunnel(ele, type) {\n\t                var tmp = danWidth / danSpeed(ele);\n\t\n\t                var _loop2 = function _loop2(i) {\n\t                    var item = danTunnel[type][i + ''];\n\t                    if (item && item.length) {\n\t                        for (var j = 0; j < item.length; j++) {\n\t                            var danRight = danItemRight(item[j]) - 10;\n\t                            if (danRight <= danWidth - tmp * danSpeed(item[j]) || danRight <= 0) {\n\t                                break;\n\t                            }\n\t                            if (j === item.length - 1) {\n\t                                danTunnel[type][i + ''].push(ele);\n\t                                ele.addEventListener('animationend', function () {\n\t                                    danTunnel[type][i + ''].splice(0, 1);\n\t                                });\n\t                                return {\n\t                                    v: i % itemY\n\t                                };\n\t                            }\n\t                        }\n\t                    } else {\n\t                        danTunnel[type][i + ''] = [ele];\n\t                        ele.addEventListener('animationend', function () {\n\t                            danTunnel[type][i + ''].splice(0, 1);\n\t                        });\n\t                        return {\n\t                            v: i % itemY\n\t                        };\n\t                    }\n\t                };\n\t\n\t                for (var i = 0;; i++) {\n\t                    var _ret3 = _loop2(i);\n\t\n\t                    if ((typeof _ret3 === 'undefined' ? 'undefined' : _typeof(_ret3)) === \"object\") return _ret3.v;\n\t                }\n\t            };\n\t\n\t            this.danmakuIn = function (text, color, type) {\n\t                danWidth = danContainer.offsetWidth;\n\t                danHeight = danContainer.offsetHeight;\n\t                itemY = parseInt(danHeight / itemHeight);\n\t                var item = document.createElement('div');\n\t                item.classList.add('dplayer-danmaku-item');\n\t                item.classList.add('dplayer-danmaku-' + type);\n\t                item.innerHTML = text;\n\t                item.style.opacity = _this2.danOpacity;\n\t\n\t                // insert\n\t                danContainer.appendChild(item);\n\t\n\t                // adjust\n\t                item.style.color = color;\n\t                switch (type) {\n\t                    case 'right':\n\t                        item.style.top = itemHeight * getTunnel(item, type) + 'px';\n\t                        item.style.width = item.offsetWidth + 1 + 'px';\n\t                        item.style.transform = 'translateX(-' + danWidth + 'px)';\n\t                        item.addEventListener('animationend', function () {\n\t                            danContainer.removeChild(item);\n\t                        });\n\t                        break;\n\t                    case 'top':\n\t                        item.style.top = itemHeight * getTunnel(item, type) + 'px';\n\t                        item.addEventListener('animationend', function () {\n\t                            danContainer.removeChild(item);\n\t                        });\n\t                        break;\n\t                    case 'bottom':\n\t                        item.style.bottom = itemHeight * getTunnel(item, type) + 'px';\n\t                        item.addEventListener('animationend', function () {\n\t                            danContainer.removeChild(item);\n\t                        });\n\t                        break;\n\t                    default:\n\t                        console.error('Can\\'t handled danmaku type: ' + type);\n\t                }\n\t\n\t                // move\n\t                item.classList.add('dplayer-danmaku-move');\n\t            };\n\t\n\t            // danmaku\n\t            if (this.option.danmaku) {\n\t                (function () {\n\t                    _this2.danIndex = 0;\n\t                    var xhr = new XMLHttpRequest();\n\t                    xhr.onreadystatechange = function () {\n\t                        if (xhr.readyState === 4) {\n\t                            if (xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {\n\t                                var response = JSON.parse(xhr.responseText);\n\t                                if (response.code !== 1) {\n\t                                    alert(response.msg);\n\t                                } else {\n\t                                    _this2.dan = response.danmaku.sort(function (a, b) {\n\t                                        return a.time - b.time;\n\t                                    });\n\t                                    _this2.element.getElementsByClassName('dplayer-danloading')[0].style.display = 'none';\n\t\n\t                                    // autoplay\n\t                                    if (_this2.option.autoplay && !_this2.isMobile) {\n\t                                        _this2.play();\n\t                                    } else if (_this2.isMobile) {\n\t                                        _this2.pause();\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                console.log('Request was unsuccessful: ' + xhr.status);\n\t                            }\n\t                        }\n\t                    };\n\t                    var apiurl = void 0;\n\t                    if (_this2.option.danmaku.maximum) {\n\t                        apiurl = _this2.option.danmaku.api + '?id=' + _this2.option.danmaku.id + '&max=' + _this2.option.danmaku.maximum;\n\t                    } else {\n\t                        apiurl = _this2.option.danmaku.api + '?id=' + _this2.option.danmaku.id;\n\t                    }\n\t                    xhr.open('get', apiurl, true);\n\t                    xhr.send(null);\n\t                })();\n\t            } else {\n\t                // autoplay\n\t                if (this.option.autoplay && !this.isMobile) {\n\t                    this.play();\n\t                } else if (this.isMobile) {\n\t                    this.pause();\n\t                }\n\t            }\n\t\n\t            /**\n\t             * comment\n\t             */\n\t            var commentInput = this.element.getElementsByClassName('dplayer-comment-input')[0];\n\t            var commentIcon = this.element.getElementsByClassName('dplayer-comment-icon')[0];\n\t            var commentBox = this.element.getElementsByClassName('dplayer-comment-box')[0];\n\t            var commentSettingIcon = this.element.getElementsByClassName('dplayer-comment-setting-icon')[0];\n\t            var commentSettingBox = this.element.getElementsByClassName('dplayer-comment-setting-box')[0];\n\t            var commentSendIcon = this.element.getElementsByClassName('dplayer-send-icon')[0];\n\t\n\t            var htmlEncode = function htmlEncode(str) {\n\t                return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\").replace(/\\//g, \"&#x2f;\");\n\t            };\n\t\n\t            var sendComment = function sendComment() {\n\t                commentInput.blur();\n\t\n\t                // text can't be empty\n\t                if (!commentInput.value.replace(/^\\s+|\\s+$/g, '')) {\n\t                    alert('要输入弹幕内容啊喂！');\n\t                    return;\n\t                }\n\t\n\t                var danmakuData = {\n\t                    token: _this2.option.danmaku.token,\n\t                    player: _this2.option.danmaku.id,\n\t                    author: 'DIYgod',\n\t                    time: _this2.audio.currentTime,\n\t                    text: commentInput.value,\n\t                    color: _this2.element.querySelector('input[name=\"dplayer-danmaku-color\"]:checked').value,\n\t                    type: _this2.element.querySelector('input[name=\"dplayer-danmaku-type\"]:checked').value\n\t                };\n\t                var xhr = new XMLHttpRequest();\n\t                xhr.onreadystatechange = function () {\n\t                    if (xhr.readyState === 4) {\n\t                        if (xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {\n\t                            var response = JSON.parse(xhr.responseText);\n\t                            if (response.code !== 1) {\n\t                                alert(response.msg);\n\t                            } else {\n\t                                console.log('Post danmaku: ', JSON.parse(xhr.responseText));\n\t                            }\n\t                        } else {\n\t                            console.log('Request was unsuccessful: ' + xhr.status);\n\t                        }\n\t                    }\n\t                };\n\t                xhr.open('post', _this2.option.danmaku.api, true);\n\t                xhr.send(JSON.stringify(danmakuData));\n\t\n\t                commentInput.value = '';\n\t                closeComment();\n\t                _this2.dan.splice(_this2.danIndex, 0, danmakuData);\n\t                _this2.danIndex++;\n\t                _this2.danmakuIn(htmlEncode(danmakuData.text), danmakuData.color, danmakuData.type);\n\t            };\n\t\n\t            var closeCommentSetting = function closeCommentSetting() {\n\t                if (commentSettingBox.classList.contains('dplayer-comment-setting-open')) {\n\t                    commentSettingBox.classList.remove('dplayer-comment-setting-open');\n\t                }\n\t            };\n\t            var toggleCommentSetting = function toggleCommentSetting() {\n\t                if (commentSettingBox.classList.contains('dplayer-comment-setting-open')) {\n\t                    commentSettingBox.classList.remove('dplayer-comment-setting-open');\n\t                } else {\n\t                    commentSettingBox.classList.add('dplayer-comment-setting-open');\n\t                }\n\t            };\n\t\n\t            var disableHide = 0;\n\t            var closeComment = function closeComment() {\n\t                if (commentBox.classList.contains('dplayer-comment-box-open')) {\n\t                    commentBox.classList.remove('dplayer-comment-box-open');\n\t                    mask.classList.remove('dplayer-mask-show');\n\t                    clearInterval(disableHide);\n\t                    _this2.element.classList.remove('dplayer-show-controller');\n\t                    closeCommentSetting();\n\t                    document.addEventListener('keydown', handleKeyDown);\n\t                }\n\t            };\n\t            var openComment = function openComment() {\n\t                commentBox.classList.add('dplayer-comment-box-open');\n\t                mask.classList.add('dplayer-mask-show');\n\t                disableHide = setInterval(function () {\n\t                    clearTimeout(hideTime);\n\t                }, 1000);\n\t                _this2.element.classList.add('dplayer-show-controller');\n\t                document.removeEventListener('keydown', handleKeyDown);\n\t            };\n\t\n\t            mask.addEventListener('click', function () {\n\t                closeComment();\n\t            });\n\t            commentIcon.addEventListener('click', function () {\n\t                openComment();\n\t                setTimeout(function () {\n\t                    commentInput.focus();\n\t                }, 300);\n\t            });\n\t            commentSettingIcon.addEventListener('click', function () {\n\t                toggleCommentSetting();\n\t            });\n\t\n\t            // comment setting box\n\t            this.element.getElementsByClassName('dplayer-comment-setting-color')[0].addEventListener('click', function () {\n\t                var sele = _this2.element.querySelector('input[name=\"dplayer-danmaku-color\"]:checked+span');\n\t                if (sele) {\n\t                    commentSettingIcon.getElementsByClassName('dplayer-fill')[0].style.fill = _this2.element.querySelector('input[name=\"dplayer-danmaku-color\"]:checked').value;\n\t                }\n\t            });\n\t\n\t            commentInput.addEventListener('click', function () {\n\t                closeCommentSetting();\n\t            });\n\t            commentInput.addEventListener('keydown', function (e) {\n\t                var event = e || window.event;\n\t                if (event.keyCode === 13) {\n\t                    sendComment();\n\t                }\n\t            });\n\t\n\t            commentSendIcon.addEventListener('click', sendComment);\n\t\n\t            /**\n\t             * full screen\n\t             */\n\t            var resetAnimation = function resetAnimation() {\n\t                danWidth = danContainer.offsetWidth;\n\t                var items = _this2.element.getElementsByClassName('dplayer-danmaku-item');\n\t                for (var i = 0; i < items.length; i++) {\n\t                    items[i].style.transform = 'translateX(-' + danWidth + 'px)';\n\t                }\n\t            };\n\t\n\t            this.element.addEventListener('fullscreenchange', function () {\n\t                resetAnimation();\n\t            });\n\t            this.element.addEventListener('mozfullscreenchange', function () {\n\t                resetAnimation();\n\t            });\n\t            this.element.addEventListener('webkitfullscreenchange', function () {\n\t                resetAnimation();\n\t            });\n\t            this.element.getElementsByClassName('dplayer-full-icon')[0].addEventListener('click', function () {\n\t                if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement) {\n\t                    if (_this2.element.requestFullscreen) {\n\t                        _this2.element.requestFullscreen();\n\t                    } else if (_this2.element.mozRequestFullScreen) {\n\t                        _this2.element.mozRequestFullScreen();\n\t                    } else if (_this2.element.webkitRequestFullscreen) {\n\t                        _this2.element.webkitRequestFullscreen();\n\t                    }\n\t                } else {\n\t                    if (document.cancelFullScreen) {\n\t                        document.cancelFullScreen();\n\t                    } else if (document.mozCancelFullScreen) {\n\t                        document.mozCancelFullScreen();\n\t                    } else if (document.webkitCancelFullScreen) {\n\t                        document.webkitCancelFullScreen();\n\t                    }\n\t                }\n\t                resetAnimation();\n\t            });\n\t\n\t            /**\n\t             * hot key\n\t             */\n\t            var handleKeyDown = function handleKeyDown(e) {\n\t                var event = e || window.event;\n\t                var percentage = void 0;\n\t                switch (event.keyCode) {\n\t                    case 32:\n\t                        event.preventDefault();\n\t                        _this2.toggle();\n\t                        break;\n\t                    case 37:\n\t                        event.preventDefault();\n\t                        _this2.audio.currentTime = _this2.audio.currentTime - 5;\n\t                        break;\n\t                    case 39:\n\t                        event.preventDefault();\n\t                        _this2.audio.currentTime = _this2.audio.currentTime + 5;\n\t                        break;\n\t                    case 38:\n\t                        event.preventDefault();\n\t                        percentage = _this2.audio.volume + 0.1;\n\t                        percentage = percentage > 0 ? percentage : 0;\n\t                        percentage = percentage < 1 ? percentage : 1;\n\t                        _this2.updateBar('volume', percentage, 'width');\n\t                        _this2.audio.volume = percentage;\n\t                        if (_this2.audio.muted) {\n\t                            _this2.audio.muted = false;\n\t                        }\n\t                        switchVolumeIcon();\n\t                        break;\n\t                    case 40:\n\t                        event.preventDefault();\n\t                        percentage = _this2.audio.volume - 0.1;\n\t                        percentage = percentage > 0 ? percentage : 0;\n\t                        percentage = percentage < 1 ? percentage : 1;\n\t                        _this2.updateBar('volume', percentage, 'width');\n\t                        _this2.audio.volume = percentage;\n\t                        if (_this2.audio.muted) {\n\t                            _this2.audio.muted = false;\n\t                        }\n\t                        switchVolumeIcon();\n\t                        break;\n\t                }\n\t            };\n\t            document.addEventListener('keydown', handleKeyDown);\n\t\n\t            /**\n\t             * right key\n\t             */\n\t            this.menu = this.element.getElementsByClassName('dplayer-menu')[0];\n\t            this.element.addEventListener('contextmenu', function (e) {\n\t                var event = e || window.event;\n\t                event.preventDefault();\n\t                _this2.menu.style.left = event.clientX - _this2.element.getBoundingClientRect().left + 'px';\n\t                _this2.menu.style.top = event.clientY - _this2.element.getBoundingClientRect().top + 'px';\n\t                _this2.menu.classList.add('dplayer-menu-show');\n\t\n\t                mask.classList.add('dplayer-mask-show');\n\t                mask.addEventListener('click', function () {\n\t                    mask.classList.remove('dplayer-mask-show');\n\t                    _this2.menu.classList.remove('dplayer-menu-show');\n\t                });\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Play music\n\t         */\n\t\n\t    }, {\n\t        key: 'play',\n\t        value: function play() {\n\t            if (this.audio.paused) {\n\t                this.shouldpause = false;\n\t\n\t                this.bezel.innerHTML = this.getSVG('play');\n\t                this.bezel.classList.add('dplayer-bezel-transition');\n\t\n\t                this.playButton.innerHTML = this.getSVG('pause');\n\t\n\t                this.audio.play();\n\t                if (this.playedTime) {\n\t                    this.clearTime();\n\t                }\n\t                this.setTime();\n\t                this.element.classList.add('dplayer-playing');\n\t                this.trigger('play');\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Pause music\n\t         */\n\t\n\t    }, {\n\t        key: 'pause',\n\t        value: function pause() {\n\t            if (!this.shouldpause || this.ended) {\n\t                this.shouldpause = true;\n\t                this.element.classList.remove('dplayer-loading');\n\t\n\t                this.bezel.innerHTML = this.getSVG('pause');\n\t                this.bezel.classList.add('dplayer-bezel-transition');\n\t\n\t                this.ended = false;\n\t                this.playButton.innerHTML = this.getSVG('play');\n\t                this.audio.pause();\n\t                this.clearTime();\n\t                this.element.classList.remove('dplayer-playing');\n\t                this.trigger('pause');\n\t            }\n\t        }\n\t\n\t        /**\n\t         * attach event\n\t         */\n\t\n\t    }, {\n\t        key: 'on',\n\t        value: function on(name, func) {\n\t            if (typeof func === 'function') {\n\t                this.event[name].push(func);\n\t            }\n\t        }\n\t    }]);\n\n\t    return DPlayer;\n\t}();\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** DPlayer.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 07ee34b5829460d0cae7\n **/","class DPlayer {\n    /**\n     * DPlayer constructor function\n     *\n     * @param {Object} option - See README\n     * @constructor\n     */\n    constructor(option) {\n        this.svg = {\n            'play': ['0 0 16 32', 'M15.552 15.168q0.448 0.32 0.448 0.832 0 0.448-0.448 0.768l-13.696 8.512q-0.768 0.512-1.312 0.192t-0.544-1.28v-16.448q0-0.96 0.544-1.28t1.312 0.192z'],\n            'pause': ['0 0 17 32', 'M14.080 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048zM2.88 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048z'],\n            'volume-up': ['0 0 21 32', 'M13.728 6.272v19.456q0 0.448-0.352 0.8t-0.8 0.32-0.8-0.32l-5.952-5.952h-4.672q-0.48 0-0.8-0.352t-0.352-0.8v-6.848q0-0.48 0.352-0.8t0.8-0.352h4.672l5.952-5.952q0.32-0.32 0.8-0.32t0.8 0.32 0.352 0.8zM20.576 16q0 1.344-0.768 2.528t-2.016 1.664q-0.16 0.096-0.448 0.096-0.448 0-0.8-0.32t-0.32-0.832q0-0.384 0.192-0.64t0.544-0.448 0.608-0.384 0.512-0.64 0.192-1.024-0.192-1.024-0.512-0.64-0.608-0.384-0.544-0.448-0.192-0.64q0-0.48 0.32-0.832t0.8-0.32q0.288 0 0.448 0.096 1.248 0.48 2.016 1.664t0.768 2.528zM25.152 16q0 2.72-1.536 5.056t-4 3.36q-0.256 0.096-0.448 0.096-0.48 0-0.832-0.352t-0.32-0.8q0-0.704 0.672-1.056 1.024-0.512 1.376-0.8 1.312-0.96 2.048-2.4t0.736-3.104-0.736-3.104-2.048-2.4q-0.352-0.288-1.376-0.8-0.672-0.352-0.672-1.056 0-0.448 0.32-0.8t0.8-0.352q0.224 0 0.48 0.096 2.496 1.056 4 3.36t1.536 5.056zM29.728 16q0 4.096-2.272 7.552t-6.048 5.056q-0.224 0.096-0.448 0.096-0.48 0-0.832-0.352t-0.32-0.8q0-0.64 0.704-1.056 0.128-0.064 0.384-0.192t0.416-0.192q0.8-0.448 1.44-0.896 2.208-1.632 3.456-4.064t1.216-5.152-1.216-5.152-3.456-4.064q-0.64-0.448-1.44-0.896-0.128-0.096-0.416-0.192t-0.384-0.192q-0.704-0.416-0.704-1.056 0-0.448 0.32-0.8t0.832-0.352q0.224 0 0.448 0.096 3.776 1.632 6.048 5.056t2.272 7.552z'],\n            'volume-down': ['0 0 21 32', 'M13.728 6.272v19.456q0 0.448-0.352 0.8t-0.8 0.32-0.8-0.32l-5.952-5.952h-4.672q-0.48 0-0.8-0.352t-0.352-0.8v-6.848q0-0.48 0.352-0.8t0.8-0.352h4.672l5.952-5.952q0.32-0.32 0.8-0.32t0.8 0.32 0.352 0.8zM20.576 16q0 1.344-0.768 2.528t-2.016 1.664q-0.16 0.096-0.448 0.096-0.448 0-0.8-0.32t-0.32-0.832q0-0.384 0.192-0.64t0.544-0.448 0.608-0.384 0.512-0.64 0.192-1.024-0.192-1.024-0.512-0.64-0.608-0.384-0.544-0.448-0.192-0.64q0-0.48 0.32-0.832t0.8-0.32q0.288 0 0.448 0.096 1.248 0.48 2.016 1.664t0.768 2.528z'],\n            'volume-off': ['0 0 21 32', 'M13.728 6.272v19.456q0 0.448-0.352 0.8t-0.8 0.32-0.8-0.32l-5.952-5.952h-4.672q-0.48 0-0.8-0.352t-0.352-0.8v-6.848q0-0.48 0.352-0.8t0.8-0.352h4.672l5.952-5.952q0.32-0.32 0.8-0.32t0.8 0.32 0.352 0.8z'],\n            'loop': ['0 0 32 32', 'M1.882 16.941c0 4.152 3.221 7.529 7.177 7.529v1.882c-4.996 0-9.060-4.222-9.060-9.412s4.064-9.412 9.060-9.412h7.96l-3.098-3.098 1.331-1.331 5.372 5.37-5.37 5.372-1.333-1.333 3.1-3.098h-7.962c-3.957 0-7.177 3.377-7.177 7.529zM22.94 7.529v1.882c3.957 0 7.177 3.377 7.177 7.529s-3.221 7.529-7.177 7.529h-7.962l3.098-3.098-1.331-1.331-5.37 5.37 5.372 5.372 1.331-1.331-3.1-3.1h7.96c4.998 0 9.062-4.222 9.062-9.412s-4.064-9.412-9.060-9.412z'],\n            'full': ['0 0 32 33', 'M6.667 28h-5.333c-0.8 0-1.333-0.533-1.333-1.333v-5.333c0-0.8 0.533-1.333 1.333-1.333s1.333 0.533 1.333 1.333v4h4c0.8 0 1.333 0.533 1.333 1.333s-0.533 1.333-1.333 1.333zM30.667 28h-5.333c-0.8 0-1.333-0.533-1.333-1.333s0.533-1.333 1.333-1.333h4v-4c0-0.8 0.533-1.333 1.333-1.333s1.333 0.533 1.333 1.333v5.333c0 0.8-0.533 1.333-1.333 1.333zM30.667 12c-0.8 0-1.333-0.533-1.333-1.333v-4h-4c-0.8 0-1.333-0.533-1.333-1.333s0.533-1.333 1.333-1.333h5.333c0.8 0 1.333 0.533 1.333 1.333v5.333c0 0.8-0.533 1.333-1.333 1.333zM1.333 12c-0.8 0-1.333-0.533-1.333-1.333v-5.333c0-0.8 0.533-1.333 1.333-1.333h5.333c0.8 0 1.333 0.533 1.333 1.333s-0.533 1.333-1.333 1.333h-4v4c0 0.8-0.533 1.333-1.333 1.333z'],\n            'setting': ['0 0 32 28', 'M28.633 17.104c0.035 0.21 0.026 0.463-0.026 0.76s-0.14 0.598-0.262 0.904c-0.122 0.306-0.271 0.581-0.445 0.825s-0.367 0.419-0.576 0.524c-0.209 0.105-0.393 0.157-0.55 0.157s-0.332-0.035-0.524-0.105c-0.175-0.052-0.393-0.1-0.655-0.144s-0.528-0.052-0.799-0.026c-0.271 0.026-0.541 0.083-0.812 0.17s-0.502 0.236-0.694 0.445c-0.419 0.437-0.664 0.934-0.734 1.493s0.009 1.092 0.236 1.598c0.175 0.349 0.148 0.699-0.079 1.048-0.105 0.14-0.271 0.284-0.498 0.432s-0.476 0.284-0.747 0.406-0.555 0.218-0.851 0.288c-0.297 0.070-0.559 0.105-0.786 0.105-0.157 0-0.306-0.061-0.445-0.183s-0.236-0.253-0.288-0.393h-0.026c-0.192-0.541-0.52-1.009-0.982-1.402s-1-0.589-1.611-0.589c-0.594 0-1.131 0.197-1.611 0.589s-0.816 0.851-1.009 1.375c-0.087 0.21-0.218 0.362-0.393 0.458s-0.367 0.144-0.576 0.144c-0.244 0-0.52-0.044-0.825-0.131s-0.611-0.197-0.917-0.327c-0.306-0.131-0.581-0.284-0.825-0.458s-0.428-0.349-0.55-0.524c-0.087-0.122-0.135-0.266-0.144-0.432s0.057-0.397 0.197-0.694c0.192-0.402 0.266-0.86 0.223-1.375s-0.266-0.991-0.668-1.428c-0.244-0.262-0.541-0.432-0.891-0.511s-0.681-0.109-0.995-0.092c-0.367 0.017-0.742 0.087-1.127 0.21-0.244 0.070-0.489 0.052-0.734-0.052-0.192-0.070-0.371-0.231-0.537-0.485s-0.314-0.533-0.445-0.838c-0.131-0.306-0.231-0.62-0.301-0.943s-0.087-0.59-0.052-0.799c0.052-0.384 0.227-0.629 0.524-0.734 0.524-0.21 0.995-0.555 1.415-1.035s0.629-1.017 0.629-1.611c0-0.611-0.21-1.144-0.629-1.598s-0.891-0.786-1.415-0.996c-0.157-0.052-0.288-0.179-0.393-0.38s-0.157-0.406-0.157-0.616c0-0.227 0.035-0.48 0.105-0.76s0.162-0.55 0.275-0.812 0.244-0.502 0.393-0.72c0.148-0.218 0.31-0.38 0.485-0.485 0.14-0.087 0.275-0.122 0.406-0.105s0.275 0.052 0.432 0.105c0.524 0.21 1.070 0.275 1.637 0.197s1.070-0.327 1.506-0.747c0.21-0.209 0.362-0.467 0.458-0.773s0.157-0.607 0.183-0.904c0.026-0.297 0.026-0.568 0-0.812s-0.048-0.419-0.065-0.524c-0.035-0.105-0.066-0.227-0.092-0.367s-0.013-0.262 0.039-0.367c0.105-0.244 0.293-0.458 0.563-0.642s0.563-0.336 0.878-0.458c0.314-0.122 0.62-0.214 0.917-0.275s0.533-0.092 0.707-0.092c0.227 0 0.406 0.074 0.537 0.223s0.223 0.301 0.275 0.458c0.192 0.471 0.507 0.886 0.943 1.244s0.952 0.537 1.546 0.537c0.611 0 1.153-0.17 1.624-0.511s0.803-0.773 0.996-1.297c0.070-0.14 0.179-0.284 0.327-0.432s0.301-0.223 0.458-0.223c0.244 0 0.511 0.035 0.799 0.105s0.572 0.166 0.851 0.288c0.279 0.122 0.537 0.279 0.773 0.472s0.423 0.402 0.563 0.629c0.087 0.14 0.113 0.293 0.079 0.458s-0.070 0.284-0.105 0.354c-0.227 0.506-0.297 1.039-0.21 1.598s0.341 1.048 0.76 1.467c0.419 0.419 0.934 0.651 1.546 0.694s1.179-0.057 1.703-0.301c0.14-0.087 0.31-0.122 0.511-0.105s0.371 0.096 0.511 0.236c0.262 0.244 0.493 0.616 0.694 1.113s0.336 1 0.406 1.506c0.035 0.297-0.013 0.528-0.144 0.694s-0.266 0.275-0.406 0.327c-0.542 0.192-1.004 0.528-1.388 1.009s-0.576 1.026-0.576 1.637c0 0.594 0.162 1.113 0.485 1.559s0.747 0.764 1.27 0.956c0.122 0.070 0.227 0.14 0.314 0.21 0.192 0.157 0.323 0.358 0.393 0.602v0zM16.451 19.462c0.786 0 1.528-0.149 2.227-0.445s1.305-0.707 1.821-1.231c0.515-0.524 0.921-1.131 1.218-1.821s0.445-1.428 0.445-2.214c0-0.786-0.148-1.524-0.445-2.214s-0.703-1.292-1.218-1.808c-0.515-0.515-1.122-0.921-1.821-1.218s-1.441-0.445-2.227-0.445c-0.786 0-1.524 0.148-2.214 0.445s-1.292 0.703-1.808 1.218c-0.515 0.515-0.921 1.118-1.218 1.808s-0.445 1.428-0.445 2.214c0 0.786 0.149 1.524 0.445 2.214s0.703 1.297 1.218 1.821c0.515 0.524 1.118 0.934 1.808 1.231s1.428 0.445 2.214 0.445v0z'],\n            'right': ['0 0 32 32', 'M22 16l-10.105-10.6-1.895 1.987 8.211 8.613-8.211 8.612 1.895 1.988 8.211-8.613z'],\n            'comment': ['0 0 32 32', 'M27.128 0.38h-22.553c-2.336 0-4.229 1.825-4.229 4.076v16.273c0 2.251 1.893 4.076 4.229 4.076h4.229v-2.685h8.403l-8.784 8.072 1.566 1.44 7.429-6.827h9.71c2.335 0 4.229-1.825 4.229-4.076v-16.273c0-2.252-1.894-4.076-4.229-4.076zM28.538 19.403c0 1.5-1.262 2.717-2.819 2.717h-8.36l-0.076-0.070-0.076 0.070h-11.223c-1.557 0-2.819-1.217-2.819-2.717v-13.589c0-1.501 1.262-2.718 2.819-2.718h19.734c1.557 0 2.819-0.141 2.819 1.359v14.947zM9.206 10.557c-1.222 0-2.215 0.911-2.215 2.036s0.992 2.035 2.215 2.035c1.224 0 2.216-0.911 2.216-2.035s-0.992-2.036-2.216-2.036zM22.496 10.557c-1.224 0-2.215 0.911-2.215 2.036s0.991 2.035 2.215 2.035c1.224 0 2.215-0.911 2.215-2.035s-0.991-2.036-2.215-2.036zM15.852 10.557c-1.224 0-2.215 0.911-2.215 2.036s0.991 2.035 2.215 2.035c1.222 0 2.215-0.911 2.215-2.035s-0.992-2.036-2.215-2.036z'],\n            'comment-off': ['0 0 32 32', 'M27.090 0.131h-22.731c-2.354 0-4.262 1.839-4.262 4.109v16.401c0 2.269 1.908 4.109 4.262 4.109h4.262v-2.706h8.469l-8.853 8.135 1.579 1.451 7.487-6.88h9.787c2.353 0 4.262-1.84 4.262-4.109v-16.401c0-2.27-1.909-4.109-4.262-4.109v0zM28.511 19.304c0 1.512-1.272 2.738-2.841 2.738h-8.425l-0.076-0.070-0.076 0.070h-11.311c-1.569 0-2.841-1.226-2.841-2.738v-13.696c0-1.513 1.272-2.739 2.841-2.739h19.889c1.569 0 2.841-0.142 2.841 1.37v15.064z'],\n            'send': ['0 0 32 32', 'M13.725 30l3.9-5.325-3.9-1.125v6.45zM0 17.5l11.050 3.35 13.6-11.55-10.55 12.425 11.8 3.65 6.1-23.375-32 15.5z']\n        };\n        this.getSVG = (type) => {\n            return `\n                <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"100%\" version=\"1.1\" viewBox=\"${this.svg[type][0]}\" width=\"100%\">\n                    <use xlink:href=\"#dplayer-${type}\"></use>\n                    <path class=\"dplayer-fill\" d=\"${this.svg[type][1]}\" id=\"dplayer-${type}\"></path>\n                </svg>\n            `;\n        };\n\n        this.isMobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n        // compatibility: some mobile browsers don't suppose autoplay\n        if (this.isMobile) {\n            option.autoplay = false;\n        }\n\n        // default options\n        const defaultOption = {\n            element: document.getElementsByClassName('dplayer')[0],\n            autoplay: false,\n            theme: '#b7daff',\n            loop: false\n        };\n        for (let defaultKey in defaultOption) {\n            if (defaultOption.hasOwnProperty(defaultKey) && !option.hasOwnProperty(defaultKey)) {\n                option[defaultKey] = defaultOption[defaultKey];\n            }\n        }\n\n        this.option = option;\n        this.loop = option.loop;\n\n        /**\n         * Parse second to 00:00 format\n         *\n         * @param {Number} second\n         * @return {String} 00:00 format\n         */\n        this.secondToTime = (second) => {\n            const add0 = (num) => {\n                return num < 10 ? '0' + num : '' + num;\n            };\n            const min = parseInt(second / 60);\n            const sec = parseInt(second - min * 60);\n            return add0(min) + ':' + add0(sec);\n        };\n\n        /**\n         * Update progress bar, including loading progress bar and play progress bar\n         *\n         * @param {String} type - Point out which bar it is, should be played loaded or volume\n         * @param {Number} percentage\n         * @param {String} direction - Point out the direction of this bar, Should be height or width\n         */\n        this.updateBar = (type, percentage, direction) => {\n            percentage = percentage > 0 ? percentage : 0;\n            percentage = percentage < 1 ? percentage : 1;\n            this[type + 'Bar'].style[direction] = percentage * 100 + '%';\n        };\n\n        // define DPlayer events\n        this.eventTypes = ['play', 'pause', 'canplay', 'playing', 'ended', 'error'];\n        this.event = {};\n        for (let i = 0; i < this.eventTypes.length; i++) {\n            this.event[this.eventTypes[i]] = [];\n        }\n        this.trigger = (type) => {\n            for (let i = 0; i < this.event[type].length; i++) {\n                this.event[type][i]();\n            }\n        }\n    }\n\n    /**\n     * AutoLink initialization function\n     */\n    init() {\n        this.element = this.option.element;\n        if (!this.option.danmaku) {\n            this.element.classList.add('dplayer-no-danmaku');\n        }\n\n        this.element.innerHTML = `\n            <div class=\"dplayer-mask\"></div>\n            <div class=\"dplayer-video-wrap\">\n                <video class=\"dplayer-video\" ${this.option.video.pic ? `poster=\"${this.option.video.pic}\"` : ``}>\n                    <source src=\"${this.option.video.url}\" type=\"video/mp4\">\n                </video>\n                <div class=\"dplayer-danmaku\"></div>\n                <div class=\"dplayer-bezel\">\n                    <span class=\"dplayer-bezel-icon\"></span>\n                   ${this.option.danmaku ? `<span class=\"dplayer-danloading\">弹幕加载中</span>` : ``}\n                    <span class=\"diplayer-loading-icon\">\n                        <svg height=\"100%\" version=\"1.1\" viewBox=\"0 0 22 22\" width=\"100%\">\n                            <svg x=\"7\" y=\"1\">\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-0\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\n                            </svg>\n                            <svg x=\"11\" y=\"3\">\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-1\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\n                            </svg>\n                            <svg x=\"13\" y=\"7\">\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-2\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\n                            </svg>\n                            <svg x=\"11\" y=\"11\">\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-3\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\n                            </svg>\n                            <svg x=\"7\" y=\"13\">\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-4\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\n                            </svg>\n                            <svg x=\"3\" y=\"11\">\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-5\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\n                            </svg>\n                            <svg x=\"1\" y=\"7\">\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-6\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\n                            </svg>\n                            <svg x=\"3\" y=\"3\">\n                                <circle class=\"diplayer-loading-dot diplayer-loading-dot-7\" cx=\"4\" cy=\"4\" r=\"2\"></circle>\n                            </svg>\n                        </svg>\n                    </span>\n                </div>\n            </div>\n            <div class=\"dplayer-controller-mask\"></div>\n            <div class=\"dplayer-controller\">\n                <div class=\"dplayer-icons dplayer-icons-left\">\n                    <button class=\"dplayer-icon dplayer-play-icon\">`\n            +           this.getSVG('play')\n            + `     </button>\n                    <div class=\"dplayer-volume\">\n                        <button class=\"dplayer-icon dplayer-volume-icon\">`\n            +               this.getSVG('volume-down')\n            + `         </button>\n                        <div class=\"dplayer-volume-bar-wrap\">\n                            <div class=\"dplayer-volume-bar\">\n                                <div class=\"dplayer-volume-bar-inner\" style=\"width: 70%; background: ${this.option.theme};\">\n                                    <span class=\"dplayer-thumb\" style=\"background: ${this.option.theme}\"></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <span class=\"dplayer-time\"><span class=\"dplayer-ptime\">0:00</span> / <span class=\"dplayer-dtime\">0:00</span></span>\n                </div>\n                <div class=\"dplayer-icons dplayer-icons-right\">\n                    <div class=\"dplayer-comment\">\n                        <button class=\"dplayer-icon dplayer-comment-icon\">`\n            +               this.getSVG('comment')\n            + `         </button>\n                        <div class=\"dplayer-comment-box\">\n                            <button class=\"dplayer-icon dplayer-comment-setting-icon\">`\n            +                   this.getSVG('setting')\n            + `             </button>\n                            <div class=\"dplayer-comment-setting-box\">\n                                <div class=\"dplayer-comment-setting-type\">\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-type\" value=\"top\">\n                                        <span>顶部</span>\n                                    </label>\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-type\" value=\"right\" checked>\n                                        <span>滚动</span>\n                                    </label>\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-type\" value=\"bottom\">\n                                        <span>底部</span>\n                                    </label>\n                                </div>\n                                <div class=\"dplayer-comment-setting-color\">\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#fff\" checked>\n                                        <span style=\"background: #fff; border: 1px solid rgba(0,0,0,.1);\"></span>\n                                    </label>\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#e54256\">\n                                        <span style=\"background: #e54256\"></span>\n                                    </label>\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#FFAB00\">\n                                        <span style=\"background: #FFAB00\"></span>\n                                    </label>\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#ffe133\">\n                                        <span style=\"background: #ffe133\"></span>\n                                    </label>\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#64DD17\">\n                                        <span style=\"background: #64DD17\"></span>\n                                    </label>\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#39ccff\">\n                                        <span style=\"background: #39ccff\"></span>\n                                    </label>\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#D500F9\">\n                                        <span style=\"background: #D500F9\"></span>\n                                    </label>\n                                    <label>\n                                        <input type=\"radio\" name=\"dplayer-danmaku-color\" value=\"#444\">\n                                        <span style=\"background: #444;\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                            <input class=\"dplayer-comment-input\" type=\"text\" placeholder=\"输入弹幕，回车发送\" maxlength=\"30\">\n                            <button class=\"dplayer-icon dplayer-send-icon\">`\n            +                   this.getSVG('send')\n            + `             </button>\n                        </div>\n                    </div>\n                    <div class=\"dplayer-setting\">\n                        <button class=\"dplayer-icon dplayer-setting-icon\">`\n            +               this.getSVG('setting')\n            + `         </button>\n                        <div class=\"dplayer-setting-box\"></div>\n                    </div>\n                    <button class=\"dplayer-icon dplayer-full-icon\">`\n            +           this.getSVG('full')\n            + `     </button>\n                </div>\n                <div class=\"dplayer-bar-wrap\">\n                    <div class=\"dplayer-bar\">\n                        <div class=\"dplayer-loaded\" style=\"width: 0;\"></div>\n                        <div class=\"dplayer-played\" style=\"width: 0; background: ${this.option.theme}\">\n                            <span class=\"dplayer-thumb\" style=\"background: ${this.option.theme}\"></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"dplayer-menu\">\n                <div class=\"dplayer-menu-item\"><span class=\"dplayer-menu-label\"><a target=\"_blank\" href=\"http://diygod.me/\">关于作者</a></span></div>\n                <div class=\"dplayer-menu-item\"><span class=\"dplayer-menu-label\"><a target=\"_blank\" href=\"https://github.com/DIYgod/DPlayer/issues\">播放器意见反馈</a></span></div>\n                <div class=\"dplayer-menu-item\"><span class=\"dplayer-menu-label\"><a target=\"_blank\" href=\"https://github.com/DIYgod/DPlayer\">关于 DPlayer 播放器</a></span></div>\n            </div>\n        `;\n\n        // get this audio object\n        this.audio = this.element.getElementsByClassName('dplayer-video')[0];\n\n        this.bezel = this.element.getElementsByClassName('dplayer-bezel-icon')[0];\n        this.bezel.addEventListener('animationend', () => {\n            this.bezel.classList.remove('dplayer-bezel-transition');\n        });\n\n        this.ptime = this.element.getElementsByClassName('dplayer-ptime')[0];\n\n        // play and pause button\n        this.playButton = this.element.getElementsByClassName('dplayer-play-icon')[0];\n        this.shouldpause = true;\n        this.toggle = () => {\n            if (this.audio.paused) {\n                this.play();\n            }\n            else {\n                this.pause();\n            }\n        };\n        this.playButton.addEventListener('click', this.toggle);\n        this.element.getElementsByClassName('dplayer-video-wrap')[0].addEventListener('click', this.toggle);\n        this.element.getElementsByClassName('dplayer-controller-mask')[0].addEventListener('click', this.toggle);\n\n\n        /**\n         * control play progress\n         */\n        // get element's view position\n        const getElementViewLeft = (element) => {\n            let actualLeft = element.offsetLeft;\n            let current = element.offsetParent;\n            let elementScrollLeft;\n            if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement) {\n                while (current !== null) {\n                    actualLeft += current.offsetLeft;\n                    current = current.offsetParent;\n                }\n            }\n            else {\n                while (current !== null && current !== this.element) {\n                    actualLeft += current.offsetLeft;\n                    current = current.offsetParent;\n                }\n            }\n            elementScrollLeft = document.body.scrollLeft + document.documentElement.scrollLeft;\n            return actualLeft - elementScrollLeft;\n        };\n\n        const getElementViewTop = (element) => {\n            let actualTop = element.offsetTop;\n            let current = element.offsetParent;\n            let elementScrollTop;\n            if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement) {\n                while (current !== null) {\n                    actualTop += current.offsetTop;\n                    current = current.offsetParent;\n                }\n            }\n            else {\n                while (current !== null && current !== this.element) {\n                    actualTop += current.offsetTop;\n                    current = current.offsetParent;\n                }\n            }\n            elementScrollTop = document.body.scrollTop + document.documentElement.scrollTop;\n            return actualTop - elementScrollTop;\n        };\n\n        this.playedBar = this.element.getElementsByClassName('dplayer-played')[0];\n        this.loadedBar = this.element.getElementsByClassName('dplayer-loaded')[0];\n        this.bar = this.element.getElementsByClassName('dplayer-bar-wrap')[0];\n        let barWidth;\n\n        if (this.option.danmaku) {\n            this.audio.addEventListener('seeking', () => {\n                for (let i = 0; i < this.dan.length; i++) {\n                    if (this.dan[i].time >= this.audio.currentTime) {\n                        this.danIndex = i;\n                        return;\n                    }\n                    this.danIndex = this.dan.length;\n                }\n            });\n        }\n\n        let lastPlayPos = 0;\n        let currentPlayPos = 0;\n        let bufferingDetected = false;\n        this.setTime = () => {\n            this.playedTime = setInterval(() => {\n                // whether the video is buffering\n                currentPlayPos = this.audio.currentTime;\n                if (!bufferingDetected\n                    && currentPlayPos < (lastPlayPos + 0.01)\n                    && !this.audio.paused) {\n                    this.element.classList.add('dplayer-loading');\n                    bufferingDetected = true;\n                }\n                if (bufferingDetected\n                    && currentPlayPos > (lastPlayPos + 0.01)\n                    && !this.audio.paused) {\n                    this.element.classList.remove('dplayer-loading');\n                    bufferingDetected = false;\n                }\n                lastPlayPos = currentPlayPos;\n\n                this.updateBar('played', this.audio.currentTime / this.audio.duration, 'width');\n                this.ptime.innerHTML = this.secondToTime(this.audio.currentTime);\n                this.trigger('playing');\n            }, 100);\n            if (this.option.danmaku) {\n                this.danmakuTime = setInterval(() => {\n                    let item = this.dan[this.danIndex];\n                    while (item && this.audio.currentTime >= parseFloat(item.time)) {\n                        this.danmakuIn(item.text, item.color, item.type);\n                        this.danIndex++;\n                        item = this.dan[this.danIndex];\n                    }\n                }, 0);\n            }\n        };\n        this.clearTime = () => {\n            clearInterval(this.playedTime);\n            if (this.option.danmaku) {\n                clearInterval(this.danmakuTime);\n            }\n        };\n\n        this.bar.addEventListener('click', (event) => {\n            const e = event || window.event;\n            barWidth = this.bar.clientWidth;\n            let percentage = (e.clientX - getElementViewLeft(this.bar)) / barWidth;\n            percentage = percentage > 0 ? percentage : 0;\n            percentage = percentage < 1 ? percentage : 1;\n            this.updateBar('played', percentage, 'width');\n            this.audio.currentTime = parseFloat(this.playedBar.style.width) / 100 * this.audio.duration;\n        });\n\n        const thumbMove = (event) => {\n            const e = event || window.event;\n            let percentage = (e.clientX - getElementViewLeft(this.bar)) / barWidth;\n            percentage = percentage > 0 ? percentage : 0;\n            percentage = percentage < 1 ? percentage : 1;\n            this.updateBar('played', percentage, 'width');\n            this.element.getElementsByClassName('dplayer-ptime')[0].innerHTML = this.secondToTime(percentage * this.audio.duration);\n        };\n\n        const thumbUp = () => {\n            document.removeEventListener('mouseup', thumbUp);\n            document.removeEventListener('mousemove', thumbMove);\n            this.audio.currentTime = parseFloat(this.playedBar.style.width) / 100 * this.audio.duration;\n            this.setTime();\n        };\n\n        this.bar.addEventListener('mousedown', () => {\n            barWidth = this.bar.clientWidth;\n            this.clearTime();\n            document.addEventListener('mousemove', thumbMove);\n            document.addEventListener('mouseup', thumbUp);\n        });\n\n\n        /**\n         * control volume\n         */\n        this.volumeBar = this.element.getElementsByClassName('dplayer-volume-bar-inner')[0];\n        const volumeEle = this.element.getElementsByClassName('dplayer-volume')[0];\n        const volumeBarWrapWrap = this.element.getElementsByClassName('dplayer-volume-bar-wrap')[0];\n        const volumeBarWrap = this.element.getElementsByClassName('dplayer-volume-bar')[0];\n        const volumeicon = this.element.getElementsByClassName('dplayer-volume-icon')[0];\n        const vWidth = 35;\n        const switchVolumeIcon = () => {\n            if (this.audio.volume >= 0.8) {\n                volumeicon.innerHTML = this.getSVG('volume-up');\n            }\n            else if (this.audio.volume > 0) {\n                volumeicon.innerHTML = this.getSVG('volume-down');\n            }\n            else {\n                volumeicon.innerHTML = this.getSVG('volume-off');\n            }\n        };\n        const volumeMove = (event) => {\n            const e = event || window.event;\n            let percentage = (e.clientX - getElementViewLeft(volumeBarWrap) - 5.5) / vWidth;\n            percentage = percentage > 0 ? percentage : 0;\n            percentage = percentage < 1 ? percentage : 1;\n            this.updateBar('volume', percentage, 'width');\n            this.audio.volume = percentage;\n            if (this.audio.muted) {\n                this.audio.muted = false;\n            }\n            switchVolumeIcon();\n        };\n        const volumeUp = () => {\n            document.removeEventListener('mouseup', volumeUp);\n            document.removeEventListener('mousemove', volumeMove);\n            volumeEle.classList.remove('dplayer-volume-active');\n        };\n\n        volumeBarWrapWrap.addEventListener('click', (event) => {\n            const e = event || window.event;\n            let percentage = (e.clientX - getElementViewLeft(volumeBarWrap) - 5.5) / vWidth;\n            percentage = percentage > 0 ? percentage : 0;\n            percentage = percentage < 1 ? percentage : 1;\n            this.updateBar('volume', percentage, 'width');\n            this.audio.volume = percentage;\n            if (this.audio.muted) {\n                this.audio.muted = false;\n            }\n            switchVolumeIcon();\n        });\n        volumeBarWrapWrap.addEventListener('mousedown', () => {\n            document.addEventListener('mousemove', volumeMove);\n            document.addEventListener('mouseup', volumeUp);\n            volumeEle.classList.add('dplayer-volume-active');\n        });\n        volumeicon.addEventListener('click', () => {\n            if (this.audio.muted) {\n                this.audio.muted = false;\n                switchVolumeIcon();\n                this.updateBar('volume', this.audio.volume, 'width');\n            }\n            else {\n                this.audio.muted = true;\n                volumeicon.innerHTML = this.getSVG('volume-off');\n                this.updateBar('volume', 0, 'width');\n            }\n        });\n\n\n        /**\n         * auto hide controller\n         */\n        let hideTime = 0;\n        const hideController = () => {\n            this.element.classList.remove('dplayer-hide-controller');\n            clearTimeout(hideTime);\n            hideTime = setTimeout(() => {\n                if (this.audio.played.length) {\n                    this.element.classList.add('dplayer-hide-controller');\n                    closeSetting();\n                    closeComment();\n                }\n            }, 2000);\n        };\n        this.element.addEventListener('mousemove', hideController);\n        this.element.addEventListener('click', hideController);\n\n\n        /***\n         * setting\n         */\n        this.danOpacity = 0.7;\n        const settingHTML = {\n            'original': `\n                    <div class=\"dplayer-setting-item dplayer-setting-loop\">\n                        <span class=\"dplayer-label\">洗脑循环</span>\n                        <div class=\"dplayer-toggle\">\n                            <input class=\"dplayer-toggle-setting-input\" type=\"checkbox\" name=\"dplayer-toggle\" id=\"dplayer-toggle\">\n                            <label for=\"dplayer-toggle\"></label>\n                        </div>\n                    </div>\n                    <div class=\"dplayer-setting-item dplayer-setting-speed\">\n                        <span class=\"dplayer-label\">速度</span>\n                        <div class=\"dplayer-toggle\">`\n                +           this.getSVG('right')\n                + `     </div>\n                    </div>\n                    <div class=\"dplayer-setting-item dplayer-setting-danmaku\">\n                        <span class=\"dplayer-label\">弹幕透明度</span>\n                        <div class=\"dplayer-danmaku-bar-wrap\">\n                            <div class=\"dplayer-danmaku-bar\">\n                                <div class=\"dplayer-danmaku-bar-inner\" style=\"width: ${this.danOpacity * 100}%\">\n                                    <span class=\"dplayer-thumb\"></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>`,\n            'speed': `\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"0.5\">\n                        <span class=\"dplayer-label\">0.5</span>\n                    </div>\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"0.75\">\n                        <span class=\"dplayer-label\">0.75</span>\n                    </div>\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"1\">\n                        <span class=\"dplayer-label\">正常</span>\n                    </div>\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"1.25\">\n                        <span class=\"dplayer-label\">1.25</span>\n                    </div>\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"1.5\">\n                        <span class=\"dplayer-label\">1.5</span>\n                    </div>\n                    <div class=\"dplayer-setting-speed-item\" data-speed=\"2\">\n                        <span class=\"dplayer-label\">2</span>\n                    </div>`\n        };\n\n        // toggle setting box\n        const settingIcon = this.element.getElementsByClassName('dplayer-setting-icon')[0];\n        const settingBox = this.element.getElementsByClassName('dplayer-setting-box')[0];\n        const mask = this.element.getElementsByClassName('dplayer-mask')[0];\n        settingBox.innerHTML = settingHTML.original;\n\n        const closeSetting = () => {\n            if (settingBox.classList.contains('dplayer-setting-box-open')) {\n                settingBox.classList.remove('dplayer-setting-box-open');\n                mask.classList.remove('dplayer-mask-show');\n                setTimeout(() => {\n                    settingBox.classList.remove('dplayer-setting-box-narrow');\n                    settingBox.innerHTML = settingHTML.original;\n                    settingEvent();\n                }, 300);\n            }\n        };\n        const openSetting = () => {\n            settingBox.classList.add('dplayer-setting-box-open');\n            mask.classList.add('dplayer-mask-show');\n        };\n\n        mask.addEventListener('click', () => {\n            closeSetting();\n        });\n        settingIcon.addEventListener('click', () => {\n            openSetting();\n        });\n\n        const settingEvent = () => {\n            // loop control\n            const loopEle = this.element.getElementsByClassName('dplayer-setting-loop')[0];\n            const loopToggle = loopEle.getElementsByClassName('dplayer-toggle-setting-input')[0];\n\n            loopToggle.checked = this.loop;\n\n            loopEle.addEventListener('click', () => {\n                loopToggle.checked = !loopToggle.checked;\n                if (loopToggle.checked) {\n                    this.loop = true;\n                    this.audio.loop = this.loop;\n                }\n                else {\n                    this.loop = false;\n                    this.audio.loop = this.loop;\n                }\n                closeSetting();\n            });\n            loopToggle.addEventListener('change', () => {\n                if (loopToggle.checked) {\n                    this.loop = true;\n                    this.audio.loop = this.loop;\n                }\n                else {\n                    this.loop = false;\n                    this.audio.loop = this.loop;\n                }\n                closeSetting();\n            });\n\n            // speed control\n            const speedEle = this.element.getElementsByClassName('dplayer-setting-speed')[0];\n            speedEle.addEventListener('click', () => {\n                settingBox.classList.add('dplayer-setting-box-narrow');\n                settingBox.innerHTML = settingHTML.speed;\n\n                const speedItem = settingBox.getElementsByClassName('dplayer-setting-speed-item');\n                for (let i = 0; i < speedItem.length; i++) {\n                    speedItem[i].addEventListener('click', () => {\n                        this.audio.playbackRate = speedItem[i].dataset.speed;\n                        closeSetting();\n                    });\n                }\n            });\n\n            if (this.option.danmaku) {\n                // danmaku opacity\n                this.danmakuBar = this.element.getElementsByClassName('dplayer-danmaku-bar-inner')[0];\n                const danmakuBarWrapWrap = this.element.getElementsByClassName('dplayer-danmaku-bar-wrap')[0];\n                const danmakuBarWrap = this.element.getElementsByClassName('dplayer-danmaku-bar')[0];\n                const danmakuSettingBox = this.element.getElementsByClassName('dplayer-setting-danmaku')[0];\n                const dWidth = 130;\n                this.updateBar('danmaku', this.danOpacity, 'width');\n\n                const danmakuMove = (event) => {\n                    const e = event || window.event;\n                    let percentage = (e.clientX - getElementViewLeft(danmakuBarWrap)) / dWidth;\n                    percentage = percentage > 0 ? percentage : 0;\n                    percentage = percentage < 1 ? percentage : 1;\n                    this.updateBar('danmaku', percentage, 'width');\n                    const items = this.element.getElementsByClassName('dplayer-danmaku-item');\n                    for (let i = 0; i < items.length; i++) {\n                        items[i].style.opacity = percentage;\n                    }\n                    this.danOpacity = percentage;\n                };\n                const danmakuUp = () => {\n                    document.removeEventListener('mouseup', danmakuUp);\n                    document.removeEventListener('mousemove', danmakuMove);\n                    danmakuSettingBox.classList.remove('dplayer-setting-danmaku-active');\n                };\n\n                danmakuBarWrapWrap.addEventListener('click', (event) => {\n                    const e = event || window.event;\n                    let percentage = (e.clientX - getElementViewLeft(danmakuBarWrap)) / dWidth;\n                    percentage = percentage > 0 ? percentage : 0;\n                    percentage = percentage < 1 ? percentage : 1;\n                    this.updateBar('danmaku', percentage, 'width');\n                    const items = this.element.getElementsByClassName('dplayer-danmaku-item');\n                    for (let i = 0; i < items.length; i++) {\n                        items[i].style.opacity = percentage;\n                    }\n                    this.danOpacity = percentage;\n                });\n                danmakuBarWrapWrap.addEventListener('mousedown', () => {\n                    document.addEventListener('mousemove', danmakuMove);\n                    document.addEventListener('mouseup', danmakuUp);\n                    danmakuSettingBox.classList.add('dplayer-setting-danmaku-active');\n                });\n            }\n        };\n        settingEvent();\n\n\n        /**\n         * audio events\n         */\n        // show audio time: the metadata has loaded or changed\n        this.audio.addEventListener('durationchange', () => {\n            if (this.audio.duration !== 1) {           // compatibility: Android browsers will output 1 at first\n                this.element.getElementsByClassName('dplayer-dtime')[0].innerHTML = this.secondToTime(this.audio.duration);\n            }\n        });\n\n        // show audio loaded bar: to inform interested parties of progress downloading the media\n        this.audio.addEventListener('progress', () => {\n            const percentage = this.audio.buffered.length ? this.audio.buffered.end(this.audio.buffered.length - 1) / this.audio.duration : 0;\n            this.updateBar('loaded', percentage, 'width');\n        });\n\n        // audio download error: an error occurs\n        this.audio.addEventListener('error', () => {\n            this.element.getElementsByClassName('dplayer-ptime')[0].innerHTML = `Error happens ╥﹏╥`;\n            this.trigger('pause');\n        });\n\n        // audio can play: enough data is available that the media can be played\n        this.audio.addEventListener('canplay', () => {\n            this.trigger('canplay');\n        });\n\n        // music end\n        this.ended = false;\n        this.audio.addEventListener('ended', () => {\n            this.updateBar('played', 1, 'width');\n            if (!this.loop) {\n                this.ended = true;\n                this.pause();\n                this.trigger('ended');\n            }\n        });\n\n        // control volume\n        this.audio.volume = parseInt(this.element.getElementsByClassName('dplayer-volume-bar-inner')[0].style.width) / 100;\n\n        // loop\n        this.audio.loop = this.loop;\n\n        // set duration time\n        if (this.audio.duration !== 1) {           // compatibility: Android browsers will output 1 at first\n            this.element.getElementsByClassName('dplayer-dtime')[0].innerHTML = this.audio.duration ? this.secondToTime(this.audio.duration) : '00:00';\n        }\n\n\n        /**\n         * danmaku display\n         */\n        const danContainer = this.element.getElementsByClassName('dplayer-danmaku')[0];\n        const itemHeight = 30;\n        let danWidth;\n        let danHeight;\n        let itemY;\n        let danTunnel = {\n            right: {},\n            top: {},\n            bottom: {}\n        };\n\n        const danItemRight = (ele) => {\n            return danContainer.getBoundingClientRect().right - ele.getBoundingClientRect().right;\n        };\n\n        const danSpeed = (ele) => {\n            return (danWidth + ele.offsetWidth) / 5;\n        };\n\n        const getTunnel = (ele, type) => {\n            const tmp = danWidth / danSpeed(ele);\n\n            for (let i = 0; ; i++) {\n                let item = danTunnel[type][i + ''];\n                if (item && item.length) {\n                    for (let j = 0; j < item.length; j++) {\n                        const danRight = danItemRight(item[j]) - 10;\n                        if (danRight <= danWidth - (tmp * danSpeed(item[j])) || danRight <= 0) {\n                            break;\n                        }\n                        if (j === item.length - 1) {\n                            danTunnel[type][i + ''].push(ele);\n                            ele.addEventListener('animationend', () => {\n                                danTunnel[type][i + ''].splice(0, 1);\n                            });\n                            return i % itemY;\n                        }\n                    }\n                }\n                else {\n                    danTunnel[type][i + ''] = [ele];\n                    ele.addEventListener('animationend', () => {\n                        danTunnel[type][i + ''].splice(0, 1);\n                    });\n                    return i % itemY;\n                }\n            }\n        };\n\n        this.danmakuIn = (text, color, type) => {\n            danWidth = danContainer.offsetWidth;\n            danHeight = danContainer.offsetHeight;\n            itemY = parseInt(danHeight / itemHeight);\n            let item = document.createElement(`div`);\n            item.classList.add(`dplayer-danmaku-item`);\n            item.classList.add(`dplayer-danmaku-${type}`);\n            item.innerHTML = text;\n            item.style.opacity = this.danOpacity;\n\n            // insert\n            danContainer.appendChild(item);\n\n            // adjust\n            item.style.color = color;\n            switch (type) {\n                case 'right':\n                    item.style.top = itemHeight * getTunnel(item, type) + 'px';\n                    item.style.width = (item.offsetWidth + 1) + 'px';\n                    item.style.transform = `translateX(-${danWidth}px)`;\n                    item.addEventListener('animationend', () => {\n                        danContainer.removeChild(item);\n                    });\n                    break;\n                case 'top':\n                    item.style.top = itemHeight * getTunnel(item, type) + 'px';\n                    item.addEventListener('animationend', () => {\n                        danContainer.removeChild(item);\n                    });\n                    break;\n                case 'bottom':\n                    item.style.bottom = itemHeight * getTunnel(item, type) + 'px';\n                    item.addEventListener('animationend', () => {\n                        danContainer.removeChild(item);\n                    });\n                    break;\n                default:\n                    console.error(`Can't handled danmaku type: ${type}`);\n            }\n\n            // move\n            item.classList.add(`dplayer-danmaku-move`);\n        };\n\n        // danmaku\n        if (this.option.danmaku) {\n            this.danIndex = 0;\n            const xhr = new XMLHttpRequest();\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                    if (xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {\n                        const response = JSON.parse(xhr.responseText);\n                        if (response.code !== 1) {\n                            alert(response.msg);\n                        }\n                        else {\n                            this.dan = response.danmaku.sort((a, b) => a.time - b.time);\n                            this.element.getElementsByClassName('dplayer-danloading')[0].style.display = 'none';\n\n                            // autoplay\n                            if (this.option.autoplay && !this.isMobile) {\n                                this.play();\n                            }\n                            else if (this.isMobile) {\n                                this.pause();\n                            }\n                        }\n                    }\n                    else {\n                        console.log('Request was unsuccessful: ' + xhr.status);\n                    }\n                }\n            };\n            let apiurl;\n            if (this.option.danmaku.maximum) {\n                apiurl = `${this.option.danmaku.api}?id=${this.option.danmaku.id}&max=${this.option.danmaku.maximum}`;\n            }\n            else {\n                apiurl = `${this.option.danmaku.api}?id=${this.option.danmaku.id}`;\n            }\n            xhr.open('get', apiurl, true);\n            xhr.send(null);\n        }\n        else {\n            // autoplay\n            if (this.option.autoplay && !this.isMobile) {\n                this.play();\n            }\n            else if (this.isMobile) {\n                this.pause();\n            }\n        }\n\n\n        /**\n         * comment\n         */\n        const commentInput = this.element.getElementsByClassName('dplayer-comment-input')[0];\n        const commentIcon = this.element.getElementsByClassName('dplayer-comment-icon')[0];\n        const commentBox = this.element.getElementsByClassName('dplayer-comment-box')[0];\n        const commentSettingIcon = this.element.getElementsByClassName('dplayer-comment-setting-icon')[0];\n        const commentSettingBox = this.element.getElementsByClassName('dplayer-comment-setting-box')[0];\n        const commentSendIcon = this.element.getElementsByClassName('dplayer-send-icon')[0];\n\n        const htmlEncode = (str) => {\n            return str.replace(/&/g, \"&amp;\")\n                .replace(/</g, \"&lt;\")\n                .replace(/>/g, \"&gt;\")\n                .replace(/\"/g, \"&quot;\")\n                .replace(/'/g, \"&#x27;\")\n                .replace(/\\//g, \"&#x2f;\");\n        };\n\n        const sendComment = () => {\n            commentInput.blur();\n\n            // text can't be empty\n            if (!commentInput.value.replace(/^\\s+|\\s+$/g, '')) {\n                alert('要输入弹幕内容啊喂！');\n                return;\n            }\n\n            const danmakuData = {\n                token: this.option.danmaku.token,\n                player: this.option.danmaku.id,\n                author: 'DIYgod',\n                time: this.audio.currentTime,\n                text: commentInput.value,\n                color: this.element.querySelector('input[name=\"dplayer-danmaku-color\"]:checked').value,\n                type: this.element.querySelector('input[name=\"dplayer-danmaku-type\"]:checked').value\n            };\n            const xhr = new XMLHttpRequest();\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                    if (xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {\n                        const response = JSON.parse(xhr.responseText);\n                        if (response.code !== 1) {\n                            alert(response.msg);\n                        }\n                        else {\n                            console.log('Post danmaku: ', JSON.parse(xhr.responseText));\n                        }\n                    }\n                    else {\n                        console.log('Request was unsuccessful: ' + xhr.status);\n                    }\n                }\n            };\n            xhr.open('post', this.option.danmaku.api, true);\n            xhr.send(JSON.stringify(danmakuData));\n\n            commentInput.value = '';\n            closeComment();\n            this.dan.splice(this.danIndex, 0, danmakuData);\n            this.danIndex++;\n            this.danmakuIn(htmlEncode(danmakuData.text), danmakuData.color, danmakuData.type);\n        };\n\n        const closeCommentSetting = () => {\n            if (commentSettingBox.classList.contains('dplayer-comment-setting-open')) {\n                commentSettingBox.classList.remove('dplayer-comment-setting-open');\n            }\n        };\n        const toggleCommentSetting = () => {\n            if (commentSettingBox.classList.contains('dplayer-comment-setting-open')) {\n                commentSettingBox.classList.remove('dplayer-comment-setting-open');\n            }\n            else {\n                commentSettingBox.classList.add('dplayer-comment-setting-open');\n            }\n        };\n\n        let disableHide = 0;\n        const closeComment = () => {\n            if (commentBox.classList.contains('dplayer-comment-box-open')) {\n                commentBox.classList.remove('dplayer-comment-box-open');\n                mask.classList.remove('dplayer-mask-show');\n                clearInterval(disableHide);\n                this.element.classList.remove('dplayer-show-controller');\n                closeCommentSetting();\n                document.addEventListener('keydown', handleKeyDown);\n            }\n        };\n        const openComment = () => {\n            commentBox.classList.add('dplayer-comment-box-open');\n            mask.classList.add('dplayer-mask-show');\n            disableHide = setInterval(() => {\n                clearTimeout(hideTime);\n            }, 1000);\n            this.element.classList.add('dplayer-show-controller');\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n\n        mask.addEventListener('click', () => {\n            closeComment();\n        });\n        commentIcon.addEventListener('click', () => {\n            openComment();\n            setTimeout(() => {\n                commentInput.focus();\n            }, 300);\n        });\n        commentSettingIcon.addEventListener('click', () => {\n            toggleCommentSetting();\n        });\n\n        // comment setting box\n        this.element.getElementsByClassName('dplayer-comment-setting-color')[0].addEventListener('click', () => {\n            const sele = this.element.querySelector('input[name=\"dplayer-danmaku-color\"]:checked+span');\n            if (sele) {\n                commentSettingIcon.getElementsByClassName('dplayer-fill')[0].style.fill = this.element.querySelector('input[name=\"dplayer-danmaku-color\"]:checked').value;\n            }\n        });\n\n        commentInput.addEventListener('click', () => {\n            closeCommentSetting();\n        });\n        commentInput.addEventListener('keydown', (e) => {\n            const event = e || window.event;\n            if (event.keyCode === 13) {\n                sendComment();\n            }\n        });\n\n        commentSendIcon.addEventListener('click', sendComment);\n\n\n        /**\n         * full screen\n         */\n        const resetAnimation = () => {\n            danWidth = danContainer.offsetWidth;\n            const items = this.element.getElementsByClassName('dplayer-danmaku-item');\n            for (let i = 0; i < items.length; i++) {\n                items[i].style.transform = `translateX(-${danWidth}px)`;\n            }\n        };\n\n        this.element.addEventListener('fullscreenchange', () => {\n            resetAnimation();\n        });\n        this.element.addEventListener('mozfullscreenchange', () => {\n            resetAnimation();\n        });\n        this.element.addEventListener('webkitfullscreenchange', () => {\n            resetAnimation();\n        });\n        this.element.getElementsByClassName('dplayer-full-icon')[0].addEventListener('click', () => {\n            if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement) {\n                if (this.element.requestFullscreen) {\n                    this.element.requestFullscreen();\n                }\n                else if (this.element.mozRequestFullScreen) {\n                    this.element.mozRequestFullScreen();\n                }\n                else if (this.element.webkitRequestFullscreen) {\n                    this.element.webkitRequestFullscreen();\n                }\n            }\n            else {\n                if (document.cancelFullScreen) {\n                    document.cancelFullScreen();\n                }\n                else if (document.mozCancelFullScreen) {\n                    document.mozCancelFullScreen();\n                }\n                else if (document.webkitCancelFullScreen) {\n                    document.webkitCancelFullScreen();\n                }\n            }\n            resetAnimation();\n        });\n\n        /**\n         * hot key\n         */\n        const handleKeyDown = (e) => {\n            const event = e || window.event;\n            let percentage;\n            switch (event.keyCode) {\n                case 32:\n                    event.preventDefault();\n                    this.toggle();\n                    break;\n                case 37:\n                    event.preventDefault();\n                    this.audio.currentTime = this.audio.currentTime -5;\n                    break;\n                case 39:\n                    event.preventDefault();\n                    this.audio.currentTime = this.audio.currentTime + 5;\n                    break;\n                case 38:\n                    event.preventDefault();\n                    percentage = this.audio.volume + 0.1;\n                    percentage = percentage > 0 ? percentage : 0;\n                    percentage = percentage < 1 ? percentage : 1;\n                    this.updateBar('volume', percentage, 'width');\n                    this.audio.volume = percentage;\n                    if (this.audio.muted) {\n                        this.audio.muted = false;\n                    }\n                    switchVolumeIcon();\n                    break;\n                case 40:\n                    event.preventDefault();\n                    percentage = this.audio.volume - 0.1;\n                    percentage = percentage > 0 ? percentage : 0;\n                    percentage = percentage < 1 ? percentage : 1;\n                    this.updateBar('volume', percentage, 'width');\n                    this.audio.volume = percentage;\n                    if (this.audio.muted) {\n                        this.audio.muted = false;\n                    }\n                    switchVolumeIcon();\n                    break;\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n\n        /**\n         * right key\n         */\n        this.menu = this.element.getElementsByClassName('dplayer-menu')[0];\n        this.element.addEventListener('contextmenu', (e) => {\n            const event = e || window.event;\n            event.preventDefault();\n            this.menu.style.left = event.clientX - this.element.getBoundingClientRect().left + 'px';\n            this.menu.style.top = event.clientY - this.element.getBoundingClientRect().top + 'px';\n            this.menu.classList.add('dplayer-menu-show');\n\n            mask.classList.add('dplayer-mask-show');\n            mask.addEventListener('click', () => {\n                mask.classList.remove('dplayer-mask-show');\n                this.menu.classList.remove('dplayer-menu-show');\n            });\n        });\n    }\n\n    /**\n     * Play music\n     */\n    play() {\n        if (this.audio.paused) {\n            this.shouldpause = false;\n\n            this.bezel.innerHTML = this.getSVG('play');\n            this.bezel.classList.add('dplayer-bezel-transition');\n\n            this.playButton.innerHTML = this.getSVG('pause');\n\n            this.audio.play();\n            if (this.playedTime) {\n                this.clearTime();\n            }\n            this.setTime();\n            this.element.classList.add('dplayer-playing');\n            this.trigger('play');\n        }\n    }\n\n    /**\n     * Pause music\n     */\n    pause() {\n        if (!this.shouldpause || this.ended) {\n            this.shouldpause = true;\n            this.element.classList.remove('dplayer-loading');\n\n            this.bezel.innerHTML = this.getSVG('pause');\n            this.bezel.classList.add('dplayer-bezel-transition');\n\n            this.ended = false;\n            this.playButton.innerHTML = this.getSVG('play');\n            this.audio.pause();\n            this.clearTime();\n            this.element.classList.remove('dplayer-playing');\n            this.trigger('pause');\n        }\n    }\n\n    /**\n     * attach event\n     */\n    on(name, func) {\n        if (typeof func === 'function') {\n            this.event[name].push(func);\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/DPlayer.js\n **/"],"sourceRoot":""}